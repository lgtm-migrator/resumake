{"version":3,"sources":["components/molecules/CheckboxInputLabel/style.scss","components/molecules/RadioLabel/style.scss","components/molecules/SelectLabel/style.scss","components/atoms/Select/style.scss","components/atoms/Textarea/style.scss","components/molecules/ToggleInputBlock/style.scss","components/organisms/ContentBlock/index.tsx","components/templates/WrapperBlock/index.tsx","hocs/withClientSize/index.tsx","hocs/withPdf/index.tsx","hocs/withXlsx/index.tsx","components/atoms/Icon/index.tsx","components/atoms/Button/index.tsx","components/atoms/Input/index.tsx","components/molecules/InputClipboardBlock/index.tsx","components/molecules/MenuList/index.tsx","components/molecules/SubMenuList/index.tsx","components/organisms/MenuBarBlock/index.tsx","containers/pages/Menu/index.tsx","components/atoms/Fieldset/index.tsx","components/molecules/FieldList/index.tsx","components/molecules/FieldListBlock/index.tsx","components/molecules/FieldWithIconBlock/index.tsx","components/molecules/LabeledRadioFieldList/index.tsx","components/molecules/ProcessList/index.tsx","components/molecules/ProjectListBlock/index.tsx","components/molecules/SectionList/index.tsx","components/molecules/SmallFieldListBlock/index.tsx","components/atoms/CheckboxInput/index.tsx","components/molecules/CheckboxInputLabel/index.tsx","containers/pages/ResumeForm/CheckboxInputLabel/index.tsx","containers/pages/ResumeForm/Input/index.tsx","components/atoms/RadioInput/index.tsx","components/molecules/RadioLabel/index.tsx","containers/pages/ResumeForm/RadioLabel/index.tsx","components/atoms/Select/index.tsx","components/molecules/SelectLabel/index.tsx","containers/pages/ResumeForm/SelectLabel/index.tsx","components/atoms/Textarea/index.tsx","containers/pages/ResumeForm/Textarea/index.tsx","components/molecules/ToggleInputBlock/index.tsx","containers/pages/ResumeForm/ToggleInputBlock/index.tsx","containers/pages/ResumeForm/index.tsx","containers/pages/ResumeIframe/index.tsx","containers/pages/index.tsx","containers/index.tsx","serviceWorker.ts","index.tsx","components/organisms/ContentBlock/style.scss","components/templates/WrapperBlock/style.scss","components/molecules/InputClipboardBlock/style.scss","components/atoms/Button/style.scss","components/atoms/Input/style.scss","components/molecules/MenuList/style.scss","components/molecules/SubMenuList/style.scss","components/organisms/MenuBarBlock/style.scss","components/atoms/Fieldset/style.scss","components/molecules/FieldList/style.scss","components/molecules/FieldListBlock/style.scss","components/molecules/FieldWithIconBlock/style.scss","components/molecules/LabeledRadioFieldList/style.scss","components/molecules/ProcessList/style.scss","components/molecules/ProjectListBlock/style.scss","components/molecules/SectionList/style.scss","components/molecules/SmallFieldListBlock/style.scss"],"names":["module","exports","ContentBlock","children","WrapperBlock","clientHeight","clientWidth","React","useMemo","reduce","previousValue","currentValue","key","form","menu","pdf","style","height","width","createContext","Consumer","Provider","withClientSize","WrappedComponent","props","window","document","documentElement","useState","clientSize","setCurrentClientSize","useEffect","handleResize","addEventListener","debounce","removeEventListener","value","withPdf","pdfMake","fonts","ipam","bold","bolditalics","normal","italics","vfs","pdfFonts","createPdf","useCallback","values","belongs","birthday","education","engineerCode","expertise","nearestStation","operation","projects","qualification","selfIntroduction","sex","specialty","specialtyBusiness","projectRows","forEach","project","push","firstTableBody","moment","diff","format","filter","undefined","content","alignment","fontSize","margin","text","layout","fillColor","_","__","columnIndex","hLineWidth","index","body","table","length","vLineWidth","widths","map","columns","nextKey","nextValue","rowIndex","colSpan","rowSpan","dbList","from","fwMwToolList","languageList","pageBreakAfter","process","requirementDefinition","basicDesign","detailedDesign","mountingSingleUnit","combinedTest","comprehensiveTest","maintenanceAndOperation","role","serverOsList","team","title","to","cell","pageBreak","join","headerRows","defaultStyle","font","lineHeight","pageMargins","pageSize","withXlsx","createXlsx","workBook","xlsx","utils","book_new","merges","s","r","c","e","columnLength","Array","fill","flatMap","row","data","i","Set","slice","workSheet","aoa_to_sheet","book_append_sheet","write","type","Icon","color","IconType","iconType","size","Button","Input","InputClipboardBlock","id","readOnly","data-clipboard-target","GoClippy","MenuList","items","menus","description","term","SubMenuList","subMenus","handleClick","onClick","MenuBarBlock","Menu","json","ref","useRef","currentPdf","setCurrentPdf","uniqid","display","download","open","swal","buttons","paddingBottom","FaAmazon","then","Fieldset","legend","FieldList","fields","Fragment","FieldListBlock","fieldList","footer","FieldWithIconBlock","field","icon","LabeledRadioFieldList","ProcessList","processes","ProjectListBlock","node","SectionList","child","SmallFieldListBlock","CheckboxInput","CheckboxInputLabel","label","checked","RadioInput","RadioLabel","Select","SelectLabel","Textarea","ToggleInputBlock","handleChange","onChange","setFieldValue","name","disabled","withFormik","handleSubmit","handleSubmit2","birthdayDate","date","birthdayMonth","month","birthdayYear","year","operationDate","operationMonth","operationYear","startOf","fromMonth","fromYear","toMonth","toYear","mapPropsToValues","initialValue","timer","setInterval","clearInterval","component","placeholder","keys","reverse","months","endOf","render","remove","min","index2","tabIndex","FiMinusSquare","FiPlusSquare","ResumeIframe","url","setUrl","getDataUrl","result","src","compose","add","setValues","JSON","stringify","current","Containers","Pages","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0022e82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox-input-label\":\"src-components-molecules-CheckboxInputLabel-___style__checkbox-input-label___pU-3N\",\"label\":\"src-components-molecules-CheckboxInputLabel-___style__label___2qWoH\",\"styled-checkbox\":\"src-components-molecules-CheckboxInputLabel-___style__styled-checkbox___2ne9Q\",\"checked\":\"src-components-molecules-CheckboxInputLabel-___style__checked___3gyko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-label\":\"src-components-molecules-RadioLabel-___style__radio-label___3-UIp\",\"styled-radio\":\"src-components-molecules-RadioLabel-___style__styled-radio___11Z5e\",\"checked\":\"src-components-molecules-RadioLabel-___style__checked___3V_yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-label\":\"src-components-molecules-SelectLabel-___style__select-label___1KdgR\",\"styled-select\":\"src-components-molecules-SelectLabel-___style__styled-select___2FG3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"src-components-atoms-Select-___style__select___g5Enn\",\"styled-select\":\"src-components-atoms-Select-___style__styled-select___yLWmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"src-components-atoms-Textarea-___style__textarea___1-A6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-input-block\":\"src-components-molecules-ToggleInputBlock-___style__toggle-input-block___34qVO\"};","import './style.scss';\r\nimport React from 'react';\r\n\r\nconst ContentBlock: React.FC = ({ children }) => (\r\n  <div styleName=\"content-block\">{children}</div>\r\n);\r\n\r\nexport default ContentBlock;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nexport interface WrapperBlockProps {\r\n  clientHeight: number;\r\n  clientWidth: number;\r\n}\r\n\r\nconst WrapperBlock: React.FC<WrapperBlockProps> = ({\r\n  children,\r\n  clientHeight,\r\n  clientWidth\r\n}) => {\r\n  const { form, menu, pdf } = React.useMemo(\r\n    () =>\r\n      (children as React.ReactNode[]).reduce<{\r\n        form?: React.ReactNode;\r\n        menu?: React.ReactNode;\r\n        pdf?: React.ReactNode;\r\n      }>((previousValue, currentValue) => {\r\n        const { key } = currentValue as {\r\n          key: 'form' | 'menu' | 'pdf';\r\n          [key: string]: any;\r\n        };\r\n\r\n        return { ...previousValue, [key]: currentValue };\r\n      }, {}),\r\n    [children]\r\n  );\r\n\r\n  return (\r\n    <div style={{ height: clientHeight }} styleName=\"wrapper-block\">\r\n      <header styleName=\"menu\">{menu}</header>\r\n      <div style={{ width: clientWidth / 2 }} styleName=\"form\">\r\n        {form}\r\n      </div>\r\n      <div styleName=\"pdf\">{pdf}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrapperBlock;\r\n","import { debounce } from 'debounce';\r\nimport React from 'react';\r\n\r\nconst clientSize = {\r\n  clientHeight: 0,\r\n  clientWidth: 0\r\n};\r\n\r\nexport interface WithClientSize {\r\n  clientSize: typeof clientSize;\r\n}\r\n\r\nconst { Consumer, Provider } = React.createContext<\r\n  WithClientSize['clientSize']\r\n>(clientSize);\r\n\r\nfunction withClientSize<TOutter>(\r\n  WrappedComponent: React.FC<TOutter & WithClientSize>\r\n): React.FC<TOutter & WithClientSize> {\r\n  const ClientSize: React.FC<TOutter & WithClientSize> = props => {\r\n    const { clientHeight, clientWidth } = React.useMemo(() => {\r\n      if (typeof window === 'undefined') {\r\n        return {\r\n          clientHeight: 0,\r\n          clientWidth: 0\r\n        };\r\n      }\r\n\r\n      const {\r\n        document: {\r\n          documentElement: { clientHeight, clientWidth }\r\n        }\r\n      } = window;\r\n\r\n      return { clientHeight, clientWidth };\r\n    }, []);\r\n\r\n    const [clientSize, setCurrentClientSize] = React.useState({\r\n      clientHeight,\r\n      clientWidth\r\n    });\r\n\r\n    React.useEffect(() => {\r\n      const handleResize = () => {\r\n        const {\r\n          documentElement: { clientHeight, clientWidth }\r\n        } = document;\r\n\r\n        setCurrentClientSize({ clientHeight, clientWidth });\r\n      };\r\n\r\n      handleResize();\r\n\r\n      window.addEventListener('resize', debounce(handleResize, 250));\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }, [setCurrentClientSize]);\r\n\r\n    return (\r\n      <Provider value={clientSize}>\r\n        <Consumer>\r\n          {value => <WrappedComponent {...props} clientSize={value} />}\r\n        </Consumer>\r\n      </Provider>\r\n    );\r\n  };\r\n\r\n  return ClientSize;\r\n}\r\n\r\nexport default withClientSize;\r\n","import moment from 'moment';\r\nimport pdfMake, { PageSize, TCreatedPdf } from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport React from 'react';\r\n\r\nexport interface WithPdf {\r\n  createPdf: (values: Values) => TCreatedPdf;\r\n}\r\n\r\nfunction withPdf<TOutter>(\r\n  WrappedComponent: React.FC<TOutter & WithPdf>\r\n): React.FC<TOutter & WithPdf> {\r\n  const Pdf: React.FC<TOutter & WithPdf> = props => {\r\n    React.useEffect(() => {\r\n      pdfMake.fonts = {\r\n        ipam: {\r\n          bold: 'ipam.ttf',\r\n          bolditalics: 'ipam.ttf',\r\n          normal: 'ipam.ttf',\r\n          italics: 'ipam.ttf'\r\n        }\r\n      };\r\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n    }, []);\r\n\r\n    const createPdf = React.useCallback<WithPdf['createPdf']>(values => {\r\n      const {\r\n        belongs,\r\n        birthday,\r\n        education,\r\n        engineerCode,\r\n        expertise,\r\n        nearestStation,\r\n        operation,\r\n        projects,\r\n        qualification,\r\n        selfIntroduction,\r\n        sex,\r\n        specialty,\r\n        specialtyBusiness\r\n      } = values;\r\n\r\n      const projectRows: typeof projects = [];\r\n\r\n      projects.forEach(project => {\r\n        projectRows.push(project);\r\n        projectRows.push(project);\r\n      });\r\n\r\n      const firstTableBody = [\r\n        {\r\n          key: '技術者コード',\r\n          value: engineerCode || ''\r\n        },\r\n        {\r\n          key: '所属',\r\n          value: belongs || ''\r\n        },\r\n        {\r\n          key: '年齢',\r\n          value: `満${moment().diff(birthday, 'years')}歳`\r\n        },\r\n        {\r\n          key: '性別',\r\n          value: `${sex === 'man' ? '男' : '女'}性`\r\n        },\r\n        {\r\n          key: '資格',\r\n          value: qualification\r\n        },\r\n        {\r\n          key: '学歴',\r\n          value: education\r\n        },\r\n        {\r\n          key: '稼働',\r\n          value: operation.format('YYYY年M月D日〜')\r\n        },\r\n        {\r\n          key: '最寄り駅',\r\n          value: nearestStation\r\n        }\r\n      ].filter(({ value }) => value !== undefined);\r\n\r\n      return pdfMake.createPdf({\r\n        content: [\r\n          {\r\n            alignment: 'center',\r\n            fontSize: 12,\r\n            margin: [0, 0, 0, 5],\r\n            style: 'header',\r\n            text: 'スキルシート'\r\n          },\r\n          {\r\n            layout: {\r\n              fillColor: (_: number, __: any, columnIndex: number) =>\r\n                columnIndex % 2 ? null : '#ccf',\r\n              hLineWidth: (index: number, { table: { body } }: any) =>\r\n                !index || index === body.length ? 1 : 0.5,\r\n              vLineWidth: (index: number, { table: { widths } }: any) =>\r\n                !index || index === widths.length ? 1 : 0.5\r\n            },\r\n            margin: [0, 0, 0, 5],\r\n            table: {\r\n              body: firstTableBody\r\n                .filter((_, index) => !(index % 2))\r\n                .map(({ key, value }, index) => {\r\n                  const columns = [key, value];\r\n\r\n                  if (firstTableBody.length <= index * 2 + 1) {\r\n                    return [...columns, '', ''];\r\n                  }\r\n\r\n                  const { key: nextKey, value: nextValue } = firstTableBody[\r\n                    index * 2 + 1\r\n                  ];\r\n\r\n                  return [...columns, nextKey, nextValue];\r\n                }),\r\n              widths: [50, '*', 50, '*']\r\n            }\r\n          },\r\n          {\r\n            layout: {\r\n              fillColor: (_: number, __: any, columnIndex: number) =>\r\n                columnIndex % 2 ? null : '#ccf',\r\n              hLineWidth: (index: number, { table: { body } }: any) =>\r\n                !index || index === body.length ? 1 : 0.5,\r\n              vLineWidth: (index: number, { table: { widths } }: any) =>\r\n                !index || index === widths.length ? 1 : 0.5\r\n            },\r\n            margin: [0, 0, 0, 5],\r\n            table: {\r\n              body: [\r\n                ['得意分野', specialty],\r\n                ['得意技術', expertise],\r\n                ['得意業務', specialtyBusiness]\r\n              ],\r\n              widths: [50, '*']\r\n            }\r\n          },\r\n          {\r\n            layout: {\r\n              fillColor: (_: number, __: any, columnIndex: number) =>\r\n                columnIndex % 2 ? null : '#ccf',\r\n              hLineWidth: (index: number, { table: { body } }: any) =>\r\n                !index || index === body.length ? 1 : 0.5,\r\n              vLineWidth: (index: number, { table: { widths } }: any) =>\r\n                !index || index === widths.length ? 1 : 0.5\r\n            },\r\n            margin: [0, 0, 0, 5],\r\n            table: {\r\n              body: [['自己PR', selfIntroduction]],\r\n              widths: [50, '*']\r\n            }\r\n          },\r\n          {\r\n            layout: {\r\n              fillColor: (rowIndex: number, _: any, columnIndex: number) =>\r\n                rowIndex <= 1 || (columnIndex === 0 && rowIndex !== 12 + 2)\r\n                  ? '#ccf'\r\n                  : null,\r\n              hLineWidth: (index: number, { table: { body } }: any) =>\r\n                !index || index === body.length ? 1 : 0.5,\r\n              vLineWidth: (index: number, { table: { widths } }: any) =>\r\n                !index || index === widths.length ? 1 : 0.5\r\n            },\r\n            table: {\r\n              body: [\r\n                [\r\n                  {\r\n                    colSpan: 4,\r\n                    rowSpan: 2,\r\n                    text: '期間'\r\n                  },\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: '業務内容'\r\n                  },\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: `役割\r\n                    規模`\r\n                  },\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: '使用言語'\r\n                  },\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: 'DB'\r\n                  },\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: 'サーバOS'\r\n                  },\r\n                  {\r\n                    rowSpan: 2,\r\n                    text: `FW・MW\r\n                          ツール等`\r\n                  },\r\n                  {\r\n                    colSpan: 7,\r\n                    text: '担当工程'\r\n                  },\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  ''\r\n                ],\r\n                [\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  '要件定義',\r\n                  '基本設計',\r\n                  '詳細設計',\r\n                  '実装・単体',\r\n                  '結合テスト',\r\n                  '総合テスト',\r\n                  '保守・運用'\r\n                ],\r\n                ...projectRows.map(\r\n                  (\r\n                    {\r\n                      content,\r\n                      dbList,\r\n                      from,\r\n                      fwMwToolList,\r\n                      languageList,\r\n                      pageBreakAfter,\r\n                      process: {\r\n                        requirementDefinition,\r\n                        basicDesign,\r\n                        detailedDesign,\r\n                        mountingSingleUnit,\r\n                        combinedTest,\r\n                        comprehensiveTest,\r\n                        maintenanceAndOperation\r\n                      },\r\n                      role,\r\n                      serverOsList,\r\n                      team,\r\n                      title,\r\n                      to\r\n                    },\r\n                    index\r\n                  ) =>\r\n                    !(index % 2)\r\n                      ? [\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: index / 2 + 1\r\n                          },\r\n                          from.format(`YYYY年MM月`),\r\n                          '-',\r\n                          to.format(`YYYY年MM月`),\r\n                          title,\r\n                          role,\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: languageList.join('\\n') || '-'\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: dbList.join('\\n') || '-'\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: serverOsList.join('\\n') || '-'\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: fwMwToolList.join('\\n') || '-'\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: requirementDefinition ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: basicDesign ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: detailedDesign ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: mountingSingleUnit ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: combinedTest ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: comprehensiveTest ? '●' : ''\r\n                          },\r\n                          {\r\n                            rowSpan: 2,\r\n                            text: maintenanceAndOperation ? '●' : ''\r\n                          }\r\n                        ]\r\n                      : [\r\n                          '',\r\n                          {\r\n                            colSpan: 3,\r\n                            text: `(${to.diff(from, 'months') + 1}ヶ月間)`\r\n                          },\r\n                          '',\r\n                          '',\r\n                          content,\r\n                          {\r\n                            text: `チーム\\n${team}名`\r\n                          },\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          '',\r\n                          ''\r\n                        ].map(cell =>\r\n                          pageBreakAfter\r\n                            ? {\r\n                                ...(typeof cell === 'string'\r\n                                  ? { text: cell }\r\n                                  : cell),\r\n                                pageBreak: 'after'\r\n                              }\r\n                            : cell\r\n                        )\r\n                )\r\n              ],\r\n              headerRows: 2,\r\n              widths: [\r\n                'auto',\r\n                30,\r\n                'auto',\r\n                30,\r\n                '*',\r\n                20,\r\n                'auto',\r\n                'auto',\r\n                'auto',\r\n                'auto',\r\n                5,\r\n                5,\r\n                5,\r\n                5,\r\n                5,\r\n                5,\r\n                5\r\n              ]\r\n            }\r\n          }\r\n        ],\r\n        defaultStyle: {\r\n          font: 'ipam',\r\n          fontSize: 6,\r\n          lineHeight: 1.25\r\n        },\r\n        pageMargins: [15, 5, 15, 5],\r\n        pageSize: 'A4' as PageSize.A4\r\n      });\r\n    }, []);\r\n\r\n    return <WrappedComponent {...props} createPdf={createPdf} />;\r\n  };\r\n\r\n  return Pdf;\r\n}\r\n\r\nexport default withPdf;\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport xlsx, { WritingOptions } from 'xlsx';\r\n\r\nexport interface WithXlsx {\r\n  createXlsx: (values: Values) => any;\r\n}\r\n\r\nfunction withXlsx<TOutter>(\r\n  WrappedComponent: React.FC<TOutter & WithXlsx>\r\n): React.FC<TOutter & WithXlsx> {\r\n  const Xlsx: React.FC<TOutter & WithXlsx> = props => {\r\n    const createXlsx = React.useCallback<WithXlsx['createXlsx']>(\r\n      ({\r\n        belongs,\r\n        birthday,\r\n        education,\r\n        engineerCode,\r\n        nearestStation,\r\n        operation,\r\n        qualification,\r\n        sex\r\n      }) => {\r\n        const workBook = xlsx.utils.book_new();\r\n        const name = 'スキルシート';\r\n        const columnLength = 17;\r\n\r\n        const merges = [\r\n          // header\r\n          { s: { r: 0, c: 0 }, e: { r: 0, c: columnLength - 1 } },\r\n          // 個人情報\r\n          ...Array(4)\r\n            .fill(null)\r\n            .flatMap((_, index) => {\r\n              const row = index + 1;\r\n\r\n              return [\r\n                { s: { r: row, c: 0 }, e: { r: row, c: 1 } },\r\n                { s: { r: row, c: 2 }, e: { r: row, c: 4 } },\r\n                { s: { r: row, c: 5 }, e: { r: row, c: 6 } },\r\n                {\r\n                  s: { r: row, c: 7 },\r\n                  e: { r: row, c: columnLength - 1 }\r\n                }\r\n              ];\r\n            }),\r\n          // padding\r\n          { s: { r: 5, c: 0 }, e: { r: 5, c: columnLength - 1 } },\r\n          // 得意なこと\r\n          ...Array(3)\r\n            .fill(null)\r\n            .flatMap((_, index) => {\r\n              const row = index + 6;\r\n\r\n              return [\r\n                { s: { r: row, c: 0 }, e: { r: row, c: 1 } },\r\n                {\r\n                  s: { r: row, c: 2 },\r\n                  e: { r: row, c: columnLength - 1 }\r\n                }\r\n              ];\r\n            }),\r\n          // padding\r\n          { s: { r: 9, c: 0 }, e: { r: 9, c: columnLength - 1 } },\r\n          // 自己PR\r\n          { s: { r: 10, c: 0 }, e: { r: 10, c: 1 } },\r\n          {\r\n            s: { r: 10, c: 2 },\r\n            e: { r: 10, c: columnLength - 1 }\r\n          },\r\n          // padding\r\n          {\r\n            s: { r: 11, c: 0 },\r\n            e: { r: 11, c: columnLength - 1 }\r\n          }\r\n        ];\r\n\r\n        const row = Array(columnLength).fill('余白');\r\n        const data = [];\r\n\r\n        for (\r\n          let i = 0;\r\n          i < Array.from(new Set(merges.map(({ s: { r } }) => r))).length;\r\n          i++\r\n        ) {\r\n          data.push(row.slice());\r\n        }\r\n\r\n        // header\r\n        data[0][0] = 'スキルシート';\r\n\r\n        // 個人情報\r\n        data[1][0] = '技術者コード';\r\n        data[1][2] = engineerCode || '';\r\n        data[1][5] = '所属';\r\n        data[1][7] = belongs || '';\r\n        data[2][0] = '年齢';\r\n        data[2][2] = `満${moment().diff(birthday, 'years')}歳`;\r\n        data[2][5] = '性別';\r\n        data[2][7] = `${sex === 'man' ? '男' : '女'}性`;\r\n        data[3][0] = '資格';\r\n        data[3][2] = qualification;\r\n        data[3][5] = '学歴';\r\n        data[3][7] = education;\r\n        data[4][0] = '稼働';\r\n        data[4][2] = operation.format('YYYY年M月D日〜');\r\n        data[4][5] = '最寄り駅';\r\n        data[4][7] = nearestStation;\r\n\r\n        // 得意なこと\r\n        data[6][0] = '得意分野';\r\n        data[6][2] = '実装';\r\n        data[7][0] = '得意技術';\r\n        data[7][2] = 'HTML, CSS, JavaScript';\r\n        data[8][0] = '得意業務';\r\n        data[8][2] = 'Webアプリケーション開発';\r\n\r\n        // 自己PR\r\n        data[10][0] = '自己PR';\r\n        data[10][2] = 'testtest';\r\n\r\n        const workSheet = xlsx.utils.aoa_to_sheet(data);\r\n\r\n        workSheet['!merges'] = merges;\r\n\r\n        xlsx.utils.book_append_sheet(workBook, workSheet, name);\r\n\r\n        const writingOptions: WritingOptions = {\r\n          type: 'array'\r\n        };\r\n\r\n        return xlsx.write(workBook, writingOptions);\r\n      },\r\n      []\r\n    );\r\n\r\n    return <WrappedComponent {...props} createXlsx={createXlsx} />;\r\n  };\r\n\r\n  return Xlsx;\r\n}\r\n\r\nexport default withXlsx;\r\n","import React from 'react';\r\nimport { IconBaseProps, IconType } from 'react-icons';\r\n\r\nexport interface IconProps extends IconBaseProps {\r\n  iconType: IconType;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({\r\n  color = '#d22f7d',\r\n  iconType: IconType,\r\n  size = '100%'\r\n}) => <IconType color={color} size={size} />;\r\n\r\nexport default Icon;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nexport type ButtonProps = React.ButtonHTMLAttributes<any>;\r\n\r\nconst Button: React.FC<ButtonProps> = ({ type = 'button', ...props }) => (\r\n  <button {...props} styleName=\"button\" type={type} />\r\n);\r\n\r\nexport default Button;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nexport interface InputProps\r\n  extends Exclude<React.InputHTMLAttributes<any>, 'type'> {\r\n  type?: 'number' | 'text';\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ type = 'text', ...props }) => (\r\n  <input {...props} styleName=\"input\" type={type} />\r\n);\r\n\r\nexport default Input;\r\n","import './style.scss';\r\nimport Button from 'components/atoms/Button';\r\nimport Icon from 'components/atoms/Icon';\r\nimport Input, { InputProps } from 'components/atoms/Input';\r\nimport React from 'react';\r\nimport { GoClippy } from 'react-icons/go';\r\n\r\nexport type InputClipboardBlockProps = Pick<InputProps, 'id' | 'value'>;\r\n\r\nconst InputClipboardBlock: React.FC<InputClipboardBlockProps> = ({\r\n  id,\r\n  value\r\n}) => (\r\n  <div styleName=\"input-clipboard-block\">\r\n    <Input id={id} readOnly={true} styleName=\"input\" value={value} />\r\n    <Button data-clipboard-target={id}>\r\n      <Icon color=\"#fff\" iconType={GoClippy} size={15} />\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default InputClipboardBlock;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Menu {\r\n  description: React.ReactNode;\r\n  key?: string;\r\n  term: string;\r\n}\r\n\r\nexport interface MenuListProps {\r\n  menus: Menu[];\r\n}\r\n\r\nconst MenuList: React.FC<MenuListProps> = ({ menus }) => {\r\n  const items = menus.map(({ description, term, key = term }) => (\r\n    <li key={key} styleName=\"item\">\r\n      <div styleName=\"term\">{term}</div>\r\n      <div styleName=\"description\">{description}</div>\r\n    </li>\r\n  ));\r\n\r\n  return <ul styleName=\"menu-list\">{items}</ul>;\r\n};\r\n\r\nexport default MenuList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface SubMenu {\r\n  handleClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n  key?: string;\r\n  term: string;\r\n}\r\n\r\nexport interface SubMenuListProps {\r\n  subMenus: SubMenu[];\r\n}\r\n\r\nconst SubMenuList: React.FC<SubMenuListProps> = ({ subMenus }) => {\r\n  const items = subMenus.map(({ handleClick, term, key = term }) => (\r\n    <li key={key} styleName=\"item\">\r\n      <div styleName=\"term\" onClick={handleClick}>\r\n        {term}\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return <ul styleName=\"sub-menu-list\">{items}</ul>;\r\n};\r\n\r\nexport default SubMenuList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nconst MenuBarBlock: React.FC = ({ children }) => (\r\n  <div styleName=\"menu-bar-block\">{children}</div>\r\n);\r\n\r\nexport default MenuBarBlock;\r\n","import swal from '@sweetalert/with-react';\r\nimport Icon from 'components/atoms/Icon';\r\nimport InputClipboardBlock from 'components/molecules/InputClipboardBlock';\r\nimport MenuList from 'components/molecules/MenuList';\r\nimport SubMenuList from 'components/molecules/SubMenuList';\r\nimport MenuBarBlock from 'components/organisms/MenuBarBlock';\r\nimport { saveAs } from 'file-saver';\r\nimport { TCreatedPdf } from 'pdfmake/build/pdfmake';\r\nimport React from 'react';\r\nimport { FaAmazon } from 'react-icons/fa';\r\nimport swal2 from 'sweetalert';\r\nimport uniqid from 'uniqid';\r\n\r\nexport interface MenuProps {\r\n  json: string;\r\n  pdf?: TCreatedPdf;\r\n  xlsx: any;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ json, pdf, xlsx }) => {\r\n  const ref = React.useRef<HTMLInputElement>(null);\r\n  const [currentPdf, setCurrentPdf] = React.useState<typeof pdf>(pdf);\r\n  const id = React.useMemo(() => uniqid(), []);\r\n\r\n  React.useEffect(() => {\r\n    if (!pdf) {\r\n      return;\r\n    }\r\n\r\n    setCurrentPdf(pdf);\r\n  }, [pdf]);\r\n\r\n  return (\r\n    <MenuBarBlock>\r\n      <input ref={ref} style={{ display: 'none' }} type=\"file\" />\r\n      <MenuList\r\n        menus={[\r\n          {\r\n            description: (\r\n              <SubMenuList\r\n                subMenus={[\r\n                  // {\r\n                  //   handleClick: () => {\r\n                  //     const blob = new Blob([json], {\r\n                  //       type: 'application/json'\r\n                  //     });\r\n\r\n                  //     saveAs(blob, 'resumake.json');\r\n                  //   },\r\n                  //   term: '名前を付けてレジュメイクデータを保存'\r\n                  // },\r\n                  // {\r\n                  //   handleClick: () => {\r\n                  //     const { current } = ref;\r\n\r\n                  //     if (!current) {\r\n                  //       return;\r\n                  //     }\r\n\r\n                  //     current.click();\r\n                  //   },\r\n                  //   term: 'レジュメイクデータを開く'\r\n                  // },\r\n                  // {\r\n                  //   handleClick: () => {\r\n                  //     saveAs(\r\n                  //       new Blob([xlsx], { type: 'application/octet-stream' }),\r\n                  //       'resume.xlsx'\r\n                  //     );\r\n                  //   },\r\n                  //   term: '名前を付けてエクセルデータを保存'\r\n                  // },\r\n                  {\r\n                    handleClick: () => {\r\n                      if (!currentPdf) {\r\n                        return;\r\n                      }\r\n\r\n                      currentPdf.download('resume.pdf');\r\n                    },\r\n                    term: '名前を付けて保存'\r\n                  }\r\n                ]}\r\n              />\r\n            ),\r\n            term: 'ファイル'\r\n          },\r\n          {\r\n            description: (\r\n              <SubMenuList\r\n                subMenus={[\r\n                  {\r\n                    handleClick: () => {\r\n                      window.open(\r\n                        'https://github.com/piro0919/resumake/issues/new?assignees=&labels=&template=bug_report.md&title='\r\n                      );\r\n                    },\r\n                    term: 'バグを報告'\r\n                  },\r\n                  {\r\n                    handleClick: () => {\r\n                      window.open(\r\n                        'https://github.com/piro0919/resumake/issues/new?assignees=&labels=&template=feature_request.md&title='\r\n                      );\r\n                    },\r\n                    term: '新機能を要求'\r\n                  },\r\n                  {\r\n                    handleClick: () => {\r\n                      window.open('https://github.com/piro0919/resumake');\r\n                    },\r\n                    term: 'レジュメイクについて'\r\n                  },\r\n                  {\r\n                    handleClick: () => {\r\n                      window.open('https://kk-web.link/');\r\n                    },\r\n                    term: '開発者について'\r\n                  },\r\n                  {\r\n                    handleClick: () => {\r\n                      (swal as typeof swal2)({\r\n                        buttons: ['キャンセル', '寄付する'],\r\n                        content: (\r\n                          <div>\r\n                            <div style={{ paddingBottom: 10 }}>\r\n                              Amazonギフト券にてよろしくお願いします。\r\n                              <Icon iconType={FaAmazon} size={20} />\r\n                            </div>\r\n                            <InputClipboardBlock\r\n                              id={id}\r\n                              value=\"piro.haniwa@gmail.com\"\r\n                            />\r\n                          </div>\r\n                        ) as any,\r\n                        title: '寄付について'\r\n                      }).then(value => {\r\n                        if (!value) {\r\n                          return;\r\n                        }\r\n\r\n                        window.open(\r\n                          'https://www.amazon.co.jp/Amazon%E3%82%AE%E3%83%95%E3%83%88%E5%88%B8-E%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%97/dp/BT00DHI8G4'\r\n                        );\r\n                      });\r\n                    },\r\n                    term: '寄付について'\r\n                  }\r\n                ]}\r\n              />\r\n            ),\r\n            term: 'ヘルプ'\r\n          }\r\n        ]}\r\n      />\r\n    </MenuBarBlock>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nexport interface FieldsetProps {\r\n  legend: string;\r\n}\r\n\r\nconst Fieldset: React.FC<FieldsetProps> = ({ children, legend }) => (\r\n  <fieldset styleName=\"fieldset\">\r\n    <legend styleName=\"legend\">{legend}</legend>\r\n    {children}\r\n  </fieldset>\r\n);\r\n\r\nexport default Fieldset;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Field {\r\n  description: React.ReactNode;\r\n  key: string;\r\n  term: string;\r\n}\r\n\r\nexport interface FieldListProps {\r\n  fields: Field[];\r\n}\r\n\r\nconst FieldList: React.FC<FieldListProps> = ({ fields }) => {\r\n  const items = fields.map(({ description, key, term }) => (\r\n    <React.Fragment key={key}>\r\n      <dt styleName=\"term\">{term}</dt>\r\n      <dd>{description}</dd>\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return <dl styleName=\"field-list\">{items}</dl>;\r\n};\r\n\r\nexport default FieldList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nconst FieldListBlock: React.FC = ({ children }) => {\r\n  const { fieldList, footer } = React.useMemo(\r\n    () =>\r\n      (children as React.ReactNode[]).reduce<{\r\n        fieldList?: React.ReactNode;\r\n        footer?: React.ReactNode;\r\n      }>((previousValue, currentValue) => {\r\n        const { key } = currentValue as {\r\n          key: 'fieldList' | 'footer';\r\n          [key: string]: any;\r\n        };\r\n\r\n        return { ...previousValue, [key]: currentValue };\r\n      }, {}),\r\n    [children]\r\n  );\r\n\r\n  return (\r\n    <div styleName=\"field-list-block\">\r\n      {fieldList}\r\n      <div styleName=\"footer\">{footer}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldListBlock;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nconst FieldWithIconBlock: React.FC = ({ children }) => {\r\n  const { field, icon } = React.useMemo(\r\n    () =>\r\n      (children as React.ReactNode[]).reduce<{\r\n        field?: React.ReactNode;\r\n        icon?: React.ReactNode;\r\n      }>((previousValue, currentValue) => {\r\n        const { key } = currentValue as {\r\n          key: 'field' | 'icon';\r\n          [key: string]: any;\r\n        };\r\n\r\n        return { ...previousValue, [key]: currentValue };\r\n      }, {}),\r\n    [children]\r\n  );\r\n\r\n  return (\r\n    <div styleName=\"field-with-icon-block\">\r\n      {field}\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FieldWithIconBlock;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Field {\r\n  key: string;\r\n  value: React.ReactNode;\r\n}\r\n\r\nexport interface LabeledRadioFieldListProps {\r\n  fields: Field[];\r\n}\r\n\r\nconst LabeledRadioFieldList: React.FC<LabeledRadioFieldListProps> = ({\r\n  fields\r\n}) => {\r\n  const items = React.useMemo(\r\n    () =>\r\n      fields.map(({ key, value }) => (\r\n        <li styleName=\"item\" key={key}>\r\n          {value}\r\n        </li>\r\n      )),\r\n    [fields]\r\n  );\r\n\r\n  return <ul styleName=\"labeled-radio-field-list\">{items}</ul>;\r\n};\r\n\r\nexport default LabeledRadioFieldList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Process {\r\n  description: React.ReactNode;\r\n  key?: string;\r\n  term: string;\r\n}\r\n\r\nexport interface ProcessListProps {\r\n  processes: Process[];\r\n}\r\n\r\nconst ProcessList: React.FC<ProcessListProps> = ({ processes }) => {\r\n  const items = processes.map(({ description, term, key = term }) => (\r\n    <li key={key} styleName=\"item\">\r\n      {description}\r\n    </li>\r\n  ));\r\n\r\n  return <ul styleName=\"process-list\">{items}</ul>;\r\n};\r\n\r\nexport default ProcessList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Project {\r\n  key: string;\r\n  node: React.ReactNode;\r\n}\r\n\r\nexport interface ProjectListBlockProps {\r\n  footer: React.ReactNode;\r\n  projects: Project[];\r\n}\r\n\r\nconst ProjectListBlock: React.FC<ProjectListBlockProps> = ({\r\n  footer,\r\n  projects\r\n}) => {\r\n  const items = projects.map(({ key, node }, index) => (\r\n    <React.Fragment key={key}>\r\n      <dt styleName=\"term\">{`経歴${index + 1}`}</dt>\r\n      <dd styleName=\"definition\">{node}</dd>\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div styleName=\"project-list-block\">\r\n      <dl styleName=\"project-list\">{items}</dl>\r\n      <div>{footer}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectListBlock;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nconst SectionList: React.FC = ({ children }) => {\r\n  const items = React.useMemo(\r\n    () =>\r\n      (children as React.ReactNode[]).map(child => {\r\n        const { key } = child as {\r\n          key: string;\r\n          [key: string]: any;\r\n        };\r\n\r\n        return (\r\n          <li key={key} styleName=\"item\">\r\n            {child}\r\n          </li>\r\n        );\r\n      }),\r\n    [children]\r\n  );\r\n\r\n  return <ul styleName=\"section-list\">{items}</ul>;\r\n};\r\n\r\nexport default SectionList;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\ninterface Field {\r\n  key: string;\r\n  value: React.ReactNode;\r\n}\r\n\r\nexport interface SmallFieldListBlockProps {\r\n  fields: Field[];\r\n  footer: React.ReactNode;\r\n}\r\n\r\nconst SmallFieldListBlock: React.FC<SmallFieldListBlockProps> = ({\r\n  fields,\r\n  footer\r\n}) => {\r\n  const items = React.useMemo(\r\n    () => fields.map(({ key, value }) => <li key={key}>{value}</li>),\r\n    [fields]\r\n  );\r\n\r\n  return (\r\n    <div styleName=\"small-field-list-block\">\r\n      <ul styleName=\"list\">{items}</ul>\r\n      <div>{footer}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallFieldListBlock;\r\n","import React from 'react';\r\n\r\nexport type CheckboxInputProps = Omit<React.InputHTMLAttributes<any>, 'type'>;\r\n\r\nconst CheckboxInput: React.FC<CheckboxInputProps> = props => (\r\n  <input {...props} type=\"checkbox\" />\r\n);\r\n\r\nexport default CheckboxInput;\r\n","import './style.scss';\r\nimport CheckboxInput, { CheckboxInputProps } from 'components/atoms/CheckboxInput';\r\nimport React from 'react';\r\n\r\nexport interface CheckboxInputLabelProps extends CheckboxInputProps {\r\n  label: string;\r\n}\r\n\r\nconst CheckboxInputLabel: React.FC<CheckboxInputLabelProps> = ({\r\n  label,\r\n  ...props\r\n}) => {\r\n  const { checked } = props;\r\n\r\n  return (\r\n    <label styleName=\"checkbox-input-label\">\r\n      <div styleName=\"label\">{label}</div>\r\n      <div styleName={`styled-checkbox ${checked ? 'checked' : ''}`} />\r\n      <CheckboxInput {...props} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckboxInputLabel;\r\n","import CheckboxInputLabelComponent, {\r\n  CheckboxInputLabelProps as CheckboxInputLabelComponentProps\r\n} from 'components/molecules/CheckboxInputLabel';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type CheckboxInputLabelProps = FieldProps &\r\n  Pick<CheckboxInputLabelComponentProps, 'label'>;\r\n\r\nconst CheckboxInputLabel: React.FC<CheckboxInputLabelProps> = ({\r\n  field,\r\n  form,\r\n  ...props\r\n}) => {\r\n  const { value } = field;\r\n\r\n  return (\r\n    <CheckboxInputLabelComponent {...field} {...props} checked={!!value} />\r\n  );\r\n};\r\n\r\nexport default CheckboxInputLabel;\r\n","import InputComponent from 'components/atoms/Input';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type InputProps = FieldProps;\r\n\r\nconst Input: React.FC<InputProps> = ({ field, form, ...props }) => (\r\n  <InputComponent {...field} {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nexport type RadioInputProps = Exclude<React.InputHTMLAttributes<any>, 'type'>;\r\n\r\nconst RadioInput: React.FC<RadioInputProps> = props => (\r\n  <input {...props} type=\"radio\" />\r\n);\r\n\r\nexport default RadioInput;\r\n","import './style.scss';\r\nimport RadioInput, { RadioInputProps } from 'components/atoms/RadioInput';\r\nimport React from 'react';\r\n\r\nexport interface RadioLabelProps extends RadioInputProps {\r\n  label: string;\r\n}\r\n\r\nconst RadioLabel: React.FC<RadioLabelProps> = ({ label, ...props }) => {\r\n  const { checked } = props;\r\n\r\n  return (\r\n    <label styleName=\"radio-label\">\r\n      <div styleName={`styled-radio ${checked ? 'checked' : ''}`} />\r\n      {label}\r\n      <RadioInput {...props} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default RadioLabel;\r\n","import RadioLabelComponent, {\r\n  RadioLabelProps as RadioLabelComponentProps\r\n} from 'components/molecules/RadioLabel';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type RadioLabelProps = FieldProps &\r\n  Pick<RadioLabelComponentProps, 'id' | 'label'>;\r\n\r\nconst RadioLabel: React.FC<RadioLabelProps> = ({ field, form, ...props }) => {\r\n  const { value } = field;\r\n  const { id } = props;\r\n\r\n  return (\r\n    <RadioLabelComponent\r\n      {...field}\r\n      {...props}\r\n      checked={id === value}\r\n      value={id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RadioLabel;\r\n","import './style.scss';\r\nimport React from 'react';\r\n\r\nexport type SelectProps = React.SelectHTMLAttributes<any>;\r\n\r\nconst Select: React.FC<SelectProps> = props => (\r\n  <div styleName=\"select\">\r\n    <select {...props} styleName=\"styled-select\" />\r\n  </div>\r\n);\r\n\r\nexport default Select;\r\n","import './style.scss';\r\nimport Select, { SelectProps } from 'components/atoms/Select';\r\nimport React from 'react';\r\n\r\nexport interface SelectLabelProps extends SelectProps {\r\n  label: string;\r\n}\r\n\r\nconst SelectLabel: React.FC<SelectLabelProps> = ({ label, ...props }) => (\r\n  <label styleName=\"select-label\">\r\n    <div styleName=\"styled-select\">\r\n      <Select {...props} />\r\n    </div>\r\n    {label}\r\n  </label>\r\n);\r\n\r\nexport default SelectLabel;\r\n","import SelectLabelComponent, {\r\n  SelectLabelProps as SelectLabelComponentProps\r\n} from 'components/molecules/SelectLabel';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type SelectLabelProps = FieldProps &\r\n  Pick<SelectLabelComponentProps, 'label'>;\r\n\r\nconst SelectLabel: React.FC<SelectLabelProps> = ({ field, form, ...props }) => (\r\n  <SelectLabelComponent {...field} {...props} />\r\n);\r\n\r\nexport default SelectLabel;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport type TextareaProps = React.TextareaHTMLAttributes<any>;\r\n\r\nconst Textarea: React.FC<TextareaProps> = props => (\r\n  <textarea {...props} styleName=\"textarea\" />\r\n);\r\n\r\nexport default Textarea;\r\n","import TextareaComponent from 'components/atoms/Textarea';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type TextareaProps = FieldProps;\r\n\r\nconst Textarea: React.FC<TextareaProps> = ({ field, form, ...props }) => (\r\n  <TextareaComponent {...field} {...props} />\r\n);\r\n\r\nexport default Textarea;\r\n","import './style.scss';\r\nimport Input, { InputProps } from 'components/atoms/Input';\r\nimport CheckboxInputLabel, {\r\n  CheckboxInputLabelProps\r\n} from 'components/molecules/CheckboxInputLabel';\r\nimport React from 'react';\r\n\r\nexport interface ToggleInputBlockProps\r\n  extends CheckboxInputLabelProps,\r\n    InputProps {\r\n  handleChange: CheckboxInputLabelProps['onChange'];\r\n}\r\n\r\nconst ToggleInputBlock: React.FC<ToggleInputBlockProps> = ({\r\n  checked,\r\n  handleChange,\r\n  label,\r\n  ...props\r\n}) => (\r\n  <div styleName=\"toggle-input-block\">\r\n    <div>\r\n      <Input {...props} />\r\n    </div>\r\n    <div>\r\n      <CheckboxInputLabel\r\n        checked={checked}\r\n        label={label}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ToggleInputBlock;\r\n","import ToggleInputBlockComponent, {\r\n  ToggleInputBlockProps as ToggleInputBlockComponentProps\r\n} from 'components/molecules/ToggleInputBlock';\r\nimport { FieldProps } from 'formik';\r\nimport React from 'react';\r\n\r\nexport type ToggleInputBlockProps = FieldProps &\r\n  Pick<ToggleInputBlockComponentProps, 'checked' | 'label'>;\r\n\r\nconst ToggleInputBlock: React.FC<ToggleInputBlockProps> = ({\r\n  field,\r\n  form: { setFieldValue },\r\n  ...props\r\n}) => {\r\n  const { name, value } = field;\r\n  // TODO: エラー出てる\r\n  const handleChange = React.useCallback(() => {\r\n    setFieldValue(name, value === undefined ? '' : undefined);\r\n  }, [name, setFieldValue, value]);\r\n\r\n  return (\r\n    <ToggleInputBlockComponent\r\n      {...field}\r\n      {...props}\r\n      checked={value === undefined}\r\n      disabled={value === undefined}\r\n      handleChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ToggleInputBlock;\r\n","import Button from 'components/atoms/Button';\r\nimport Fieldset from 'components/atoms/Fieldset';\r\nimport Icon from 'components/atoms/Icon';\r\nimport FieldList from 'components/molecules/FieldList';\r\nimport FieldListBlock from 'components/molecules/FieldListBlock';\r\nimport FieldWithIconBlock from 'components/molecules/FieldWithIconBlock';\r\nimport LabeledRadioFieldList from 'components/molecules/LabeledRadioFieldList';\r\nimport ProcessList from 'components/molecules/ProcessList';\r\nimport ProjectListBlock from 'components/molecules/ProjectListBlock';\r\nimport SectionList from 'components/molecules/SectionList';\r\nimport SmallFieldListBlock from 'components/molecules/SmallFieldListBlock';\r\nimport { Field, FieldArray, Form, FormikProps, withFormik } from 'formik';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { FiMinusSquare, FiPlusSquare } from 'react-icons/fi';\r\nimport CheckboxInputLabel from './CheckboxInputLabel';\r\nimport Input from './Input';\r\nimport RadioLabel from './RadioLabel';\r\nimport SelectLabel from './SelectLabel';\r\nimport Textarea from './Textarea';\r\nimport ToggleInputBlock from './ToggleInputBlock';\r\n\r\ninterface FormikProject extends Omit<Project, 'from' | 'to'> {\r\n  from: {\r\n    month: number;\r\n    year: number;\r\n  };\r\n  to: {\r\n    month: number;\r\n    year: number;\r\n  };\r\n}\r\n\r\ninterface FormikValues\r\n  extends Omit<Values, 'birthday' | 'operation' | 'projects'> {\r\n  birthday: {\r\n    date: number;\r\n    month: number;\r\n    year: number;\r\n  };\r\n  operation: {\r\n    date: number;\r\n    month: number;\r\n    year: number;\r\n  };\r\n  projects: FormikProject[];\r\n}\r\n\r\ninterface OuterProps {\r\n  handleSubmit2: (values: Values) => void;\r\n  initialValue: Values;\r\n}\r\n\r\nexport type ResumeFormProps = FormikProps<FormikValues> & OuterProps;\r\n\r\nconst ResumeForm: React.FC<ResumeFormProps> = ({\r\n  handleSubmit,\r\n  initialValue,\r\n  values: {\r\n    birthday: { month, year },\r\n    projects\r\n  }\r\n}) => {\r\n  React.useEffect(() => {\r\n    handleSubmit();\r\n\r\n    const timer = setInterval(() => {\r\n      handleSubmit();\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [handleSubmit]);\r\n\r\n  return (\r\n    <Form>\r\n      <SectionList>\r\n        {[\r\n          <Fieldset key=\"個人情報\" legend=\"個人情報\">\r\n            <FieldList\r\n              fields={[\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={ToggleInputBlock}\r\n                      label=\"非表示\"\r\n                      name=\"engineerCode\"\r\n                      placeholder=\"ENG0123456789\"\r\n                    />\r\n                  ),\r\n                  key: 'engineerCode',\r\n                  term: '技術者コード'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={ToggleInputBlock}\r\n                      label=\"非表示\"\r\n                      name=\"belongs\"\r\n                      placeholder=\"個人事業主\"\r\n                    />\r\n                  ),\r\n                  key: 'belongs',\r\n                  term: '所属'\r\n                },\r\n                {\r\n                  description: (\r\n                    <LabeledRadioFieldList\r\n                      fields={[\r\n                        {\r\n                          key: 'birthday.year',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"年\"\r\n                              name=\"birthday.year\"\r\n                            >\r\n                              {Array.from(Array(100).keys())\r\n                                .reverse()\r\n                                .map(value => (\r\n                                  <option\r\n                                    key={value}\r\n                                    value={moment().year() - value}\r\n                                  >\r\n                                    {moment().year() - value}\r\n                                  </option>\r\n                                ))}\r\n                            </Field>\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'birthday.month',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"月\"\r\n                              name=\"birthday.month\"\r\n                            >\r\n                              {moment.months().map((month, index) => (\r\n                                <option key={month} value={index}>\r\n                                  {index + 1}\r\n                                </option>\r\n                              ))}\r\n                            </Field>\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'birthday.date',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"日\"\r\n                              name=\"birthday.date\"\r\n                            >\r\n                              {Array.from(\r\n                                Array(\r\n                                  moment()\r\n                                    .year(year)\r\n                                    .month(month)\r\n                                    .endOf('month')\r\n                                    .date()\r\n                                ).keys()\r\n                              ).map(value => (\r\n                                <option key={value} value={value + 1}>\r\n                                  {value + 1}\r\n                                </option>\r\n                              ))}\r\n                            </Field>\r\n                          )\r\n                        }\r\n                      ]}\r\n                    />\r\n                  ),\r\n                  key: 'birthday',\r\n                  term: '生年月日'\r\n                },\r\n                {\r\n                  description: (\r\n                    <LabeledRadioFieldList\r\n                      fields={[\r\n                        {\r\n                          key: 'man',\r\n                          value: (\r\n                            <Field\r\n                              component={RadioLabel}\r\n                              id=\"man\"\r\n                              label=\"男性\"\r\n                              name=\"sex\"\r\n                            />\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'woman',\r\n                          value: (\r\n                            <Field\r\n                              component={RadioLabel}\r\n                              id=\"woman\"\r\n                              label=\"女性\"\r\n                              name=\"sex\"\r\n                            />\r\n                          )\r\n                        }\r\n                      ]}\r\n                    />\r\n                  ),\r\n                  key: 'sex',\r\n                  term: '性別'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"qualification\"\r\n                      placeholder=\"基本情報技術者\"\r\n                    />\r\n                  ),\r\n                  key: 'qualification',\r\n                  term: '資格'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"education\"\r\n                      placeholder=\"東京大学 理学部 情報科学科 卒業\"\r\n                    />\r\n                  ),\r\n                  key: 'education',\r\n                  term: '学歴'\r\n                },\r\n                {\r\n                  description: (\r\n                    <LabeledRadioFieldList\r\n                      fields={[\r\n                        {\r\n                          key: 'operation.year',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"年\"\r\n                              name=\"operation.year\"\r\n                            >\r\n                              {Array.from(Array(5).keys())\r\n                                // .reverse()\r\n                                .map(value => (\r\n                                  <option\r\n                                    key={value}\r\n                                    value={moment().year() + value}\r\n                                  >\r\n                                    {moment().year() + value}\r\n                                  </option>\r\n                                ))}\r\n                            </Field>\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'operation.month',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"月\"\r\n                              name=\"operation.month\"\r\n                            >\r\n                              {moment.months().map((month, index) => (\r\n                                <option key={month} value={index}>\r\n                                  {index + 1}\r\n                                </option>\r\n                              ))}\r\n                            </Field>\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'operation.date',\r\n                          value: (\r\n                            <Field\r\n                              component={SelectLabel}\r\n                              label=\"日\"\r\n                              name=\"operation.date\"\r\n                            >\r\n                              {Array.from(\r\n                                Array(\r\n                                  moment()\r\n                                    .year(year)\r\n                                    .month(month)\r\n                                    .endOf('month')\r\n                                    .date()\r\n                                ).keys()\r\n                              ).map(value => (\r\n                                <option key={value} value={value + 1}>\r\n                                  {value + 1}\r\n                                </option>\r\n                              ))}\r\n                            </Field>\r\n                          )\r\n                        },\r\n                        {\r\n                          key: 'from',\r\n                          value: '〜'\r\n                        }\r\n                      ]}\r\n                    />\r\n                  ),\r\n                  key: 'operation',\r\n                  term: '稼働'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"nearestStation\"\r\n                      placeholder=\"山手線 新宿駅\"\r\n                    />\r\n                  ),\r\n                  key: 'nearestStation',\r\n                  term: '最寄り駅'\r\n                }\r\n              ]}\r\n            />\r\n          </Fieldset>,\r\n          <Fieldset key=\"得意なこと\" legend=\"得意なこと\">\r\n            <FieldList\r\n              fields={[\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"specialty\"\r\n                      placeholder=\"実装\"\r\n                    />\r\n                  ),\r\n                  key: 'specialty',\r\n                  term: '得意分野'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"expertise\"\r\n                      placeholder=\"HTML, CSS, JavaScript\"\r\n                    />\r\n                  ),\r\n                  key: 'expertise',\r\n                  term: '得意技術'\r\n                },\r\n                {\r\n                  description: (\r\n                    <Field\r\n                      component={Input}\r\n                      name=\"specialtyBusiness\"\r\n                      placeholder=\"Webサービス開発\"\r\n                    />\r\n                  ),\r\n                  key: 'specialtyBusiness',\r\n                  term: '得意業務'\r\n                }\r\n              ]}\r\n            />\r\n          </Fieldset>,\r\n          <Fieldset key=\"自己PR\" legend=\"自己PR\">\r\n            <Field component={Textarea} name=\"selfIntroduction\" />\r\n          </Fieldset>,\r\n          <Fieldset key=\"経歴\" legend=\"経歴\">\r\n            <FieldArray\r\n              name=\"projects\"\r\n              render={({ push, remove }) => (\r\n                <ProjectListBlock\r\n                  projects={projects.map((_, index) => ({\r\n                    key: `projects.${index}`,\r\n                    node: (\r\n                      <FieldListBlock>\r\n                        <FieldList\r\n                          fields={[\r\n                            {\r\n                              description: (\r\n                                <LabeledRadioFieldList\r\n                                  fields={[\r\n                                    {\r\n                                      key: 'projects.from.year',\r\n                                      value: (\r\n                                        <Field\r\n                                          component={SelectLabel}\r\n                                          label=\"年\"\r\n                                          name={`projects.${index}.from.year`}\r\n                                        >\r\n                                          {Array.from(Array(50).keys())\r\n                                            .reverse()\r\n                                            .map(value => (\r\n                                              <option\r\n                                                key={value}\r\n                                                value={\r\n                                                  moment().year() - value + 5\r\n                                                }\r\n                                              >\r\n                                                {moment().year() - value + 5}\r\n                                              </option>\r\n                                            ))}\r\n                                        </Field>\r\n                                      )\r\n                                    },\r\n                                    {\r\n                                      key: 'projects.from.month',\r\n                                      value: (\r\n                                        <Field\r\n                                          component={SelectLabel}\r\n                                          label=\"月\"\r\n                                          name={`projects.${index}.from.month`}\r\n                                        >\r\n                                          {moment\r\n                                            .months()\r\n                                            .map((month, index) => (\r\n                                              <option key={month} value={index}>\r\n                                                {index + 1}\r\n                                              </option>\r\n                                            ))}\r\n                                        </Field>\r\n                                      )\r\n                                    }\r\n                                  ]}\r\n                                />\r\n                              ),\r\n                              key: 'projects.from',\r\n                              term: '開始'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <LabeledRadioFieldList\r\n                                  fields={[\r\n                                    {\r\n                                      key: 'projects.to.year',\r\n                                      value: (\r\n                                        <Field\r\n                                          component={SelectLabel}\r\n                                          label=\"年\"\r\n                                          name={`projects.${index}.to.year`}\r\n                                        >\r\n                                          {Array.from(Array(50).keys())\r\n                                            .reverse()\r\n                                            .map(value => (\r\n                                              <option\r\n                                                key={value}\r\n                                                value={\r\n                                                  moment().year() - value + 5\r\n                                                }\r\n                                              >\r\n                                                {moment().year() - value + 5}\r\n                                              </option>\r\n                                            ))}\r\n                                        </Field>\r\n                                      )\r\n                                    },\r\n                                    {\r\n                                      key: 'projects.to.month',\r\n                                      value: (\r\n                                        <Field\r\n                                          component={SelectLabel}\r\n                                          label=\"月\"\r\n                                          name={`projects.${index}.to.month`}\r\n                                        >\r\n                                          {moment\r\n                                            .months()\r\n                                            .map((month, index) => (\r\n                                              <option key={month} value={index}>\r\n                                                {index + 1}\r\n                                              </option>\r\n                                            ))}\r\n                                        </Field>\r\n                                      )\r\n                                    }\r\n                                  ]}\r\n                                />\r\n                              ),\r\n                              key: 'projects.to',\r\n                              term: '終了'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <Field\r\n                                  component={Input}\r\n                                  name={`projects.${index}.title`}\r\n                                  placeholder={`プロジェクト${index + 1}`}\r\n                                />\r\n                              ),\r\n                              key: 'projects.title',\r\n                              term: 'プロジェクト名'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <Field\r\n                                  component={Textarea}\r\n                                  name={`projects.${index}.content`}\r\n                                />\r\n                              ),\r\n                              key: 'projects.content',\r\n                              term: '業務内容'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <Field\r\n                                  component={Input}\r\n                                  name={`projects.${index}.role`}\r\n                                  placeholder=\"PG\"\r\n                                />\r\n                              ),\r\n                              key: 'projects.role',\r\n                              term: '役割'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <React.Fragment>\r\n                                  <Field\r\n                                    component={Input}\r\n                                    min={1}\r\n                                    name={`projects.${index}.team`}\r\n                                    placeholder=\"0\"\r\n                                    style={{ width: 100 }}\r\n                                    type=\"number\"\r\n                                  />\r\n                                  名\r\n                                </React.Fragment>\r\n                              ),\r\n                              key: 'projects.team',\r\n                              term: '規模'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <FieldArray\r\n                                  name={`projects.${index}.languageList`}\r\n                                  render={({ push, remove }) => {\r\n                                    const { languageList } = projects[index];\r\n\r\n                                    return (\r\n                                      <SmallFieldListBlock\r\n                                        fields={languageList.map(\r\n                                          (_, index2) => ({\r\n                                            key: `projects.${index}.languageList.${index2}`,\r\n                                            value: (\r\n                                              <FieldWithIconBlock>\r\n                                                <Field\r\n                                                  component={Input}\r\n                                                  key=\"field\"\r\n                                                  name={`projects.${index}.languageList.${index2}`}\r\n                                                  placeholder=\"HTML\"\r\n                                                />\r\n                                                <button\r\n                                                  key=\"icon\"\r\n                                                  onClick={() => {\r\n                                                    remove(index2);\r\n                                                  }}\r\n                                                  style={{\r\n                                                    height: 20,\r\n                                                    width: 20\r\n                                                  }}\r\n                                                  tabIndex={-1}\r\n                                                  type=\"button\"\r\n                                                >\r\n                                                  <Icon\r\n                                                    iconType={FiMinusSquare}\r\n                                                  />\r\n                                                </button>\r\n                                              </FieldWithIconBlock>\r\n                                            )\r\n                                          })\r\n                                        )}\r\n                                        footer={\r\n                                          <button\r\n                                            onClick={() => {\r\n                                              const { projects } = initialValue;\r\n                                              const {\r\n                                                languageList\r\n                                              } = projects[0];\r\n\r\n                                              push(languageList[0]);\r\n                                            }}\r\n                                            style={{ height: 20, width: 20 }}\r\n                                            tabIndex={-1}\r\n                                            type=\"button\"\r\n                                          >\r\n                                            <Icon iconType={FiPlusSquare} />\r\n                                          </button>\r\n                                        }\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              ),\r\n                              key: 'projects.languageList',\r\n                              term: '使用言語'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <FieldArray\r\n                                  name={`projects.${index}.dbList`}\r\n                                  render={({ push, remove }) => {\r\n                                    const { dbList } = projects[index];\r\n\r\n                                    return (\r\n                                      <SmallFieldListBlock\r\n                                        fields={dbList.map((_, index2) => ({\r\n                                          key: `projects.${index}.dbList.${index2}`,\r\n                                          value: (\r\n                                            <FieldWithIconBlock>\r\n                                              <Field\r\n                                                component={Input}\r\n                                                key=\"field\"\r\n                                                name={`projects.${index}.dbList.${index2}`}\r\n                                                placeholder=\"PostgreSQL\"\r\n                                              />\r\n                                              <button\r\n                                                key=\"icon\"\r\n                                                onClick={() => {\r\n                                                  remove(index2);\r\n                                                }}\r\n                                                style={{\r\n                                                  height: 20,\r\n                                                  width: 20\r\n                                                }}\r\n                                                tabIndex={-1}\r\n                                                type=\"button\"\r\n                                              >\r\n                                                <Icon\r\n                                                  iconType={FiMinusSquare}\r\n                                                />\r\n                                              </button>\r\n                                            </FieldWithIconBlock>\r\n                                          )\r\n                                        }))}\r\n                                        footer={\r\n                                          <button\r\n                                            onClick={() => {\r\n                                              const { projects } = initialValue;\r\n                                              const { dbList } = projects[0];\r\n\r\n                                              push(dbList[0]);\r\n                                            }}\r\n                                            style={{ height: 20, width: 20 }}\r\n                                            tabIndex={-1}\r\n                                            type=\"button\"\r\n                                          >\r\n                                            <Icon iconType={FiPlusSquare} />\r\n                                          </button>\r\n                                        }\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              ),\r\n                              key: 'projects.dbList',\r\n                              term: 'DB'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <FieldArray\r\n                                  name={`projects.${index}.serverOsList`}\r\n                                  render={({ push, remove }) => {\r\n                                    const { serverOsList } = projects[index];\r\n\r\n                                    return (\r\n                                      <SmallFieldListBlock\r\n                                        fields={serverOsList.map(\r\n                                          (_, index2) => ({\r\n                                            key: `projects.${index}.serverOsList.${index2}`,\r\n                                            value: (\r\n                                              <FieldWithIconBlock>\r\n                                                <Field\r\n                                                  component={Input}\r\n                                                  key=\"field\"\r\n                                                  name={`projects.${index}.serverOsList.${index2}`}\r\n                                                  placeholder=\"CentOS\"\r\n                                                />\r\n                                                <button\r\n                                                  key=\"icon\"\r\n                                                  onClick={() => {\r\n                                                    remove(index2);\r\n                                                  }}\r\n                                                  style={{\r\n                                                    height: 20,\r\n                                                    width: 20\r\n                                                  }}\r\n                                                  tabIndex={-1}\r\n                                                  type=\"button\"\r\n                                                >\r\n                                                  <Icon\r\n                                                    iconType={FiMinusSquare}\r\n                                                  />\r\n                                                </button>\r\n                                              </FieldWithIconBlock>\r\n                                            )\r\n                                          })\r\n                                        )}\r\n                                        footer={\r\n                                          <button\r\n                                            onClick={() => {\r\n                                              const { projects } = initialValue;\r\n                                              const {\r\n                                                serverOsList\r\n                                              } = projects[0];\r\n\r\n                                              push(serverOsList[0]);\r\n                                            }}\r\n                                            style={{ height: 20, width: 20 }}\r\n                                            tabIndex={-1}\r\n                                            type=\"button\"\r\n                                          >\r\n                                            <Icon iconType={FiPlusSquare} />\r\n                                          </button>\r\n                                        }\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              ),\r\n                              key: 'projects.serverOsList',\r\n                              term: 'サーバOS'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <FieldArray\r\n                                  name={`projects.${index}.fwMwToolList`}\r\n                                  render={({ push, remove }) => {\r\n                                    const { fwMwToolList } = projects[index];\r\n\r\n                                    return (\r\n                                      <SmallFieldListBlock\r\n                                        fields={fwMwToolList.map(\r\n                                          (_, index2) => ({\r\n                                            key: `projects.${index}.fwMwToolList.${index2}`,\r\n                                            value: (\r\n                                              <FieldWithIconBlock>\r\n                                                <Field\r\n                                                  component={Input}\r\n                                                  key=\"field\"\r\n                                                  name={`projects.${index}.fwMwToolList.${index2}`}\r\n                                                  placeholder=\"React\"\r\n                                                />\r\n                                                <button\r\n                                                  key=\"icon\"\r\n                                                  onClick={() => {\r\n                                                    remove(index2);\r\n                                                  }}\r\n                                                  style={{\r\n                                                    height: 20,\r\n                                                    width: 20\r\n                                                  }}\r\n                                                  tabIndex={-1}\r\n                                                  type=\"button\"\r\n                                                >\r\n                                                  <Icon\r\n                                                    iconType={FiMinusSquare}\r\n                                                  />\r\n                                                </button>\r\n                                              </FieldWithIconBlock>\r\n                                            )\r\n                                          })\r\n                                        )}\r\n                                        footer={\r\n                                          <button\r\n                                            onClick={() => {\r\n                                              const { projects } = initialValue;\r\n                                              const {\r\n                                                fwMwToolList\r\n                                              } = projects[0];\r\n\r\n                                              push(fwMwToolList[0]);\r\n                                            }}\r\n                                            style={{ height: 20, width: 20 }}\r\n                                            tabIndex={-1}\r\n                                            type=\"button\"\r\n                                          >\r\n                                            <Icon iconType={FiPlusSquare} />\r\n                                          </button>\r\n                                        }\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              ),\r\n                              key: 'projects.fwMwToolList',\r\n                              term: 'FW・MW ツール等'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <ProcessList\r\n                                  processes={[\r\n                                    {\r\n                                      key: 'requirementDefinition',\r\n                                      value: '要件定義'\r\n                                    },\r\n                                    {\r\n                                      key: 'basicDesign',\r\n                                      value: '基本設計'\r\n                                    },\r\n                                    {\r\n                                      key: 'detailedDesign',\r\n                                      value: '詳細設計'\r\n                                    },\r\n                                    {\r\n                                      key: 'mountingSingleUnit',\r\n                                      value: '実装・単体'\r\n                                    },\r\n                                    {\r\n                                      key: 'combinedTest',\r\n                                      value: '結合テスト'\r\n                                    },\r\n                                    {\r\n                                      key: 'comprehensiveTest',\r\n                                      value: '総合テスト'\r\n                                    },\r\n                                    {\r\n                                      key: 'maintenanceAndOperation',\r\n                                      value: '保守・運用'\r\n                                    }\r\n                                  ].map(({ key, value }) => ({\r\n                                    description: (\r\n                                      <Field\r\n                                        component={CheckboxInputLabel}\r\n                                        label={value}\r\n                                        name={`projects.${index}.process.${key}`}\r\n                                      />\r\n                                    ),\r\n                                    term: value\r\n                                  }))}\r\n                                />\r\n                              ),\r\n                              key: 'projects.process',\r\n                              term: '担当工程'\r\n                            },\r\n                            {\r\n                              description: (\r\n                                <Field\r\n                                  component={CheckboxInputLabel}\r\n                                  name={`projects.${index}.pageBreakAfter`}\r\n                                />\r\n                              ),\r\n                              key: 'projects.pageBreakAfter',\r\n                              term: '改ページ'\r\n                            }\r\n                          ]}\r\n                          key=\"fieldList\"\r\n                        />\r\n                        <Button\r\n                          key=\"footer\"\r\n                          onClick={() => {\r\n                            remove(index);\r\n                          }}\r\n                          tabIndex={-1}\r\n                          type=\"button\"\r\n                        >\r\n                          削除\r\n                        </Button>\r\n                      </FieldListBlock>\r\n                    )\r\n                  }))}\r\n                  footer={\r\n                    <Button\r\n                      onClick={() => {\r\n                        const { projects } = initialValue;\r\n\r\n                        push(\r\n                          projects.map(({ from, to, ...projects }) => ({\r\n                            ...projects,\r\n                            from: {\r\n                              month: from.month(),\r\n                              year: from.year()\r\n                            },\r\n                            to: {\r\n                              month: to.month(),\r\n                              year: to.year()\r\n                            }\r\n                          }))[0]\r\n                        );\r\n                      }}\r\n                      tabIndex={-1}\r\n                    >\r\n                      追加\r\n                    </Button>\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n          </Fieldset>\r\n        ]}\r\n      </SectionList>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withFormik<OuterProps, FormikValues>({\r\n  handleSubmit: (\r\n    {\r\n      birthday: {\r\n        date: birthdayDate,\r\n        month: birthdayMonth,\r\n        year: birthdayYear\r\n      },\r\n      operation: {\r\n        date: operationDate,\r\n        month: operationMonth,\r\n        year: operationYear\r\n      },\r\n      projects,\r\n      ...values\r\n    },\r\n    { props: { handleSubmit2 } }\r\n  ) => {\r\n    handleSubmit2({\r\n      ...values,\r\n      birthday: moment()\r\n        .year(birthdayYear)\r\n        .month(birthdayMonth)\r\n        .date(birthdayDate)\r\n        .startOf('date'),\r\n      operation: moment()\r\n        .year(operationYear)\r\n        .month(operationMonth)\r\n        .date(operationDate)\r\n        .startOf('date'),\r\n      projects: projects.map(\r\n        ({\r\n          from: { month: fromMonth, year: fromYear },\r\n          to: { month: toMonth, year: toYear },\r\n          ...project\r\n        }) => ({\r\n          ...project,\r\n          from: moment()\r\n            .year(fromYear)\r\n            .month(fromMonth)\r\n            .startOf('month'),\r\n          to: moment()\r\n            .year(toYear)\r\n            .month(toMonth)\r\n            .startOf('month')\r\n        })\r\n      )\r\n    });\r\n  },\r\n  mapPropsToValues: ({\r\n    initialValue: { birthday, operation, projects, ...initialValue }\r\n  }) => ({\r\n    ...initialValue,\r\n    birthday: {\r\n      date: birthday.date(),\r\n      month: birthday.month(),\r\n      year: birthday.year()\r\n    },\r\n    operation: {\r\n      date: operation.date(),\r\n      month: operation.month(),\r\n      year: operation.year()\r\n    },\r\n    projects: projects.map(({ from, to, ...projects }) => ({\r\n      ...projects,\r\n      from: {\r\n        month: from.month(),\r\n        year: from.year()\r\n      },\r\n      to: {\r\n        month: to.month(),\r\n        year: to.year()\r\n      }\r\n    }))\r\n  })\r\n})(ResumeForm);\r\n","import { TCreatedPdf } from 'pdfmake/build/pdfmake';\r\nimport React from 'react';\r\n\r\nexport interface ResumeIframeProps {\r\n  pdf?: TCreatedPdf;\r\n}\r\n\r\nconst ResumeIframe: React.FC<ResumeIframeProps> = ({ pdf }) => {\r\n  const [url, setUrl] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    if (!pdf) {\r\n      return;\r\n    }\r\n\r\n    pdf.getDataUrl(result => {\r\n      setUrl(result);\r\n    });\r\n  }, [pdf, setUrl]);\r\n\r\n  return (\r\n    <iframe\r\n      src={url}\r\n      style={{\r\n        height: '100%',\r\n        width: '100%'\r\n      }}\r\n      title=\"resume\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ResumeIframe;\r\n","import ContentBlock from 'components/organisms/ContentBlock';\r\nimport WrapperBlock from 'components/templates/WrapperBlock';\r\nimport withClientSize, { WithClientSize } from 'hocs/withClientSize';\r\nimport withPdf, { WithPdf } from 'hocs/withPdf';\r\nimport withXlsx, { WithXlsx } from 'hocs/withXlsx';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport Menu from './Menu';\r\nimport ResumeForm, { ResumeFormProps } from './ResumeForm';\r\nimport ResumeIframe from './ResumeIframe';\r\n\r\ntype TOutter = RouteComponentProps;\r\n\r\nexport type PagesProps = TOutter & WithClientSize & WithPdf & WithXlsx;\r\n\r\nconst Pages: React.FC<PagesProps> = ({\r\n  clientSize: { clientHeight, clientWidth },\r\n  createPdf,\r\n  createXlsx\r\n}) => {\r\n  const initialValue = React.useMemo<\r\n    ArgumentTypes<ResumeFormProps['handleSubmit2']>[0]\r\n  >(\r\n    () => ({\r\n      belongs: '',\r\n      birthday: moment()\r\n        .add(-30, 'years')\r\n        .startOf('date'),\r\n      education: '',\r\n      engineerCode: '',\r\n      expertise: '',\r\n      nearestStation: '',\r\n      operation: moment()\r\n        .add(1, 'month')\r\n        .startOf('month'),\r\n      projects: [\r\n        {\r\n          content: '',\r\n          dbList: [''],\r\n          from: moment()\r\n            .add(-1, 'year')\r\n            .startOf('month'),\r\n          fwMwToolList: [''],\r\n          languageList: [''],\r\n          process: {\r\n            requirementDefinition: false,\r\n            basicDesign: false,\r\n            detailedDesign: false,\r\n            mountingSingleUnit: false,\r\n            combinedTest: false,\r\n            comprehensiveTest: false,\r\n            maintenanceAndOperation: false\r\n          },\r\n          role: '',\r\n          serverOsList: [''],\r\n          team: 1,\r\n          title: '',\r\n          to: moment().startOf('month')\r\n        }\r\n      ],\r\n      qualification: '',\r\n      selfIntroduction: '',\r\n      sex: 'man',\r\n      specialty: '',\r\n      specialtyBusiness: ''\r\n    }),\r\n    []\r\n  );\r\n\r\n  const [values, setValues] = React.useState<typeof initialValue>(initialValue);\r\n\r\n  const handleSubmit = React.useCallback<ResumeFormProps['handleSubmit2']>(\r\n    values => {\r\n      setValues(values);\r\n    },\r\n    [setValues]\r\n  );\r\n\r\n  const ref = React.useRef(values);\r\n\r\n  const pdf = React.useMemo(() => {\r\n    if (JSON.stringify(ref.current) === JSON.stringify(values)) {\r\n      return;\r\n    }\r\n\r\n    return createPdf(values);\r\n  }, [createPdf, ref, values]);\r\n\r\n  const xlsx = React.useMemo(() => {\r\n    if (JSON.stringify(ref.current) === JSON.stringify(values)) {\r\n      return;\r\n    }\r\n\r\n    return createXlsx(values);\r\n  }, [createXlsx, ref, values]);\r\n\r\n  const json = React.useMemo(() => JSON.stringify(values), [values]);\r\n\r\n  React.useEffect(() => {\r\n    ref.current = values;\r\n  }, [ref, values]);\r\n\r\n  return (\r\n    <WrapperBlock clientHeight={clientHeight} clientWidth={clientWidth}>\r\n      <Menu json={json} key=\"menu\" pdf={pdf} xlsx={xlsx} />\r\n      <ContentBlock key=\"form\">\r\n        <ResumeForm handleSubmit2={handleSubmit} initialValue={initialValue} />\r\n      </ContentBlock>\r\n      <ResumeIframe key=\"pdf\" pdf={pdf} />\r\n    </WrapperBlock>\r\n  );\r\n};\r\n\r\nexport default compose<PagesProps, TOutter>(\r\n  withClientSize,\r\n  withPdf,\r\n  withXlsx\r\n)(Pages);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Pages from './pages';\r\n\r\nconst Containers: React.FC = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route component={Pages} exact={true} path=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Containers;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'moment/locale/ja';\r\nimport 'ress';\r\nimport './styles/global.scss';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Containers from './containers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Containers />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-block\":\"src-components-organisms-ContentBlock-___style__content-block___2XDzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper-block\":\"src-components-templates-WrapperBlock-___style__wrapper-block___w7QVB\",\"menu\":\"src-components-templates-WrapperBlock-___style__menu___3tACG\",\"form\":\"src-components-templates-WrapperBlock-___style__form___qXLui\",\"pdf\":\"src-components-templates-WrapperBlock-___style__pdf___3cgCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-clipboard-block\":\"src-components-molecules-InputClipboardBlock-___style__input-clipboard-block___2iVWm\",\"input\":\"src-components-molecules-InputClipboardBlock-___style__input___1GqFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"src-components-atoms-Button-___style__button___7GmPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"src-components-atoms-Input-___style__input___3PVlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-list\":\"src-components-molecules-MenuList-___style__menu-list___16K96\",\"item\":\"src-components-molecules-MenuList-___style__item___U2zUW\",\"term\":\"src-components-molecules-MenuList-___style__term___3mDBU\",\"description\":\"src-components-molecules-MenuList-___style__description___w6712\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sub-menu-list\":\"src-components-molecules-SubMenuList-___style__sub-menu-list___gNvL3\",\"item\":\"src-components-molecules-SubMenuList-___style__item___2NpQj\",\"term\":\"src-components-molecules-SubMenuList-___style__term___3ph-I\",\"description\":\"src-components-molecules-SubMenuList-___style__description___25jBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-bar-block\":\"src-components-organisms-MenuBarBlock-___style__menu-bar-block___1FZtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"src-components-atoms-Fieldset-___style__fieldset___2BEfr\",\"legend\":\"src-components-atoms-Fieldset-___style__legend___3gWyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-list\":\"src-components-molecules-FieldList-___style__field-list___2MXM4\",\"term\":\"src-components-molecules-FieldList-___style__term___1fwnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-list-block\":\"src-components-molecules-FieldListBlock-___style__field-list-block___2zvPn\",\"footer\":\"src-components-molecules-FieldListBlock-___style__footer___3OPEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-with-icon-block\":\"src-components-molecules-FieldWithIconBlock-___style__field-with-icon-block___3CeDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labeled-radio-field-list\":\"src-components-molecules-LabeledRadioFieldList-___style__labeled-radio-field-list___1BKnp\",\"item\":\"src-components-molecules-LabeledRadioFieldList-___style__item___3ZsIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"process-list\":\"src-components-molecules-ProcessList-___style__process-list___2pSXi\",\"item\":\"src-components-molecules-ProcessList-___style__item___3lEOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project-list-block\":\"src-components-molecules-ProjectListBlock-___style__project-list-block___2p8Th\",\"project-list\":\"src-components-molecules-ProjectListBlock-___style__project-list___208np\",\"term\":\"src-components-molecules-ProjectListBlock-___style__term___2x1lJ\",\"definition\":\"src-components-molecules-ProjectListBlock-___style__definition___2B5gA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-list\":\"src-components-molecules-SectionList-___style__section-list___RaHQ-\",\"item\":\"src-components-molecules-SectionList-___style__item___11rU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-field-list-block\":\"src-components-molecules-SmallFieldListBlock-___style__small-field-list-block___1h2Yk\",\"list\":\"src-components-molecules-SmallFieldListBlock-___style__list___3L3tK\"};"],"sourceRoot":""}