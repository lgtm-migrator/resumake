{"version":3,"sources":["components/organisms/ContentBlock/style.scss","components/templates/WrapperBlock/style.scss","components/molecules/MenuList/style.scss","components/molecules/SubMenuList/style.scss","components/organisms/MenuBarBlock/style.scss","components/atoms/Button/style.scss","components/atoms/Fieldset/style.scss","components/molecules/FieldList/style.scss","components/molecules/FieldListBlock/style.scss","components/molecules/FieldWithIconBlock/style.scss","components/molecules/LabeledRadioFieldList/style.scss","components/molecules/ProcessList/style.scss","components/molecules/ProjectListBlock/style.scss","components/molecules/SectionList/style.scss","components/molecules/SmallFieldListBlock/style.scss","components/molecules/CheckboxInputLabel/style.scss","components/atoms/Input/style.scss","components/molecules/RadioLabel/style.scss","components/molecules/SelectLabel/style.scss","components/atoms/Select/style.scss","components/atoms/Textarea/style.scss","components/molecules/ToggleInputBlock/style.scss","components/organisms/ContentBlock/index.tsx","components/templates/WrapperBlock/index.tsx","hocs/withClientSize/index.tsx","components/molecules/MenuList/index.tsx","components/molecules/SubMenuList/index.tsx","components/organisms/MenuBarBlock/index.tsx","containers/pages/Menu/index.tsx","components/atoms/Button/index.tsx","components/atoms/Fieldset/index.tsx","components/atoms/Icon/index.tsx","components/molecules/FieldList/index.tsx","components/molecules/FieldListBlock/index.tsx","components/molecules/FieldWithIconBlock/index.tsx","components/molecules/LabeledRadioFieldList/index.tsx","components/molecules/ProcessList/index.tsx","components/molecules/ProjectListBlock/index.tsx","components/molecules/SectionList/index.tsx","components/molecules/SmallFieldListBlock/index.tsx","components/atoms/CheckboxInput/index.tsx","components/molecules/CheckboxInputLabel/index.tsx","containers/pages/ResumeForm/CheckboxInputLabel/index.tsx","components/atoms/Input/index.tsx","containers/pages/ResumeForm/Input/index.tsx","components/atoms/RadioInput/index.tsx","components/molecules/RadioLabel/index.tsx","containers/pages/ResumeForm/RadioLabel/index.tsx","components/atoms/Select/index.tsx","components/molecules/SelectLabel/index.tsx","containers/pages/ResumeForm/SelectLabel/index.tsx","components/atoms/Textarea/index.tsx","containers/pages/ResumeForm/Textarea/index.tsx","components/molecules/ToggleInputBlock/index.tsx","containers/pages/ResumeForm/ToggleInputBlock/index.tsx","containers/pages/ResumeForm/index.tsx","containers/pages/ResumeIframe/index.tsx","containers/pages/index.tsx","containers/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ContentBlock","children","WrapperBlock","clientHeight","clientWidth","React","useState","contentWidth","setFormWidth","pdfWidth","setPdfWidth","useMemo","reduce","previousValue","currentValue","key","form","menu","pdf","handleResize","useCallback","width","useEffect","style","height","handleWidth","onResize","createContext","Consumer","Provider","withClientSize","WrappedComponent","props","window","document","documentElement","clientSize","setCurrentClientSize","addEventListener","debounce","removeEventListener","value","MenuList","items","menus","map","description","term","SubMenuList","subMenus","handleClick","onClick","MenuBarBlock","Menu","json","ref","useRef","currentPdf","setCurrentPdf","display","type","download","open","swal","content","title","Button","Fieldset","legend","Icon","color","IconType","iconType","size","FieldList","fields","Fragment","FieldListBlock","fieldList","footer","FieldWithIconBlock","field","icon","LabeledRadioFieldList","ProcessList","processes","ProjectListBlock","projects","index","node","SectionList","child","SmallFieldListBlock","CheckboxInput","CheckboxInputLabel","label","checked","Input","RadioInput","RadioLabel","id","Select","SelectLabel","Textarea","ToggleInputBlock","handleChange","onChange","setFieldValue","name","undefined","disabled","withFormik","handleSubmit","handleSubmit2","birthday","birthdayDate","date","birthdayMonth","month","birthdayYear","year","operation","operationDate","operationMonth","operationYear","moment","startOf","from","fromMonth","fromYear","to","toMonth","toYear","mapPropsToValues","initialValue","values","timer","setInterval","clearInterval","component","placeholder","Array","keys","reverse","months","endOf","render","push","remove","_","min","languageList","index2","tabIndex","FiMinusSquare","FiPlusSquare","dbList","serverOsList","fwMwToolList","ResumeIframe","url","setUrl","getDataUrl","result","src","belongs","add","education","engineerCode","expertise","nearestStation","process","requirementDefinition","basicDesign","detailedDesign","mountingSingleUnit","combinedTest","comprehensiveTest","maintenanceAndOperation","role","team","qualification","selfIntroduction","sex","specialty","specialtyBusiness","setValues","pdfMake","fonts","ipam","bold","bolditalics","normal","italics","vfs","pdfFonts","JSON","stringify","current","projectRows","forEach","project","firstTableBody","diff","format","filter","createPdf","alignment","fontSize","margin","text","layout","fillColor","__","columnIndex","hLineWidth","body","table","length","vLineWidth","widths","columns","nextKey","nextValue","rowIndex","colSpan","rowSpan","pageBreakAfter","cell","pageBreak","join","headerRows","defaultStyle","font","lineHeight","pageMargins","pageSize","Containers","basename","Pages","exact","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4d9fe7e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-block\":\"src-components-organisms-ContentBlock-___style__content-block___2XDzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper-block\":\"src-components-templates-WrapperBlock-___style__wrapper-block___w7QVB\",\"menu\":\"src-components-templates-WrapperBlock-___style__menu___3tACG\",\"form\":\"src-components-templates-WrapperBlock-___style__form___qXLui\",\"pdf\":\"src-components-templates-WrapperBlock-___style__pdf___3cgCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-list\":\"src-components-molecules-MenuList-___style__menu-list___16K96\",\"item\":\"src-components-molecules-MenuList-___style__item___U2zUW\",\"term\":\"src-components-molecules-MenuList-___style__term___3mDBU\",\"description\":\"src-components-molecules-MenuList-___style__description___w6712\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sub-menu-list\":\"src-components-molecules-SubMenuList-___style__sub-menu-list___gNvL3\",\"item\":\"src-components-molecules-SubMenuList-___style__item___2NpQj\",\"term\":\"src-components-molecules-SubMenuList-___style__term___3ph-I\",\"description\":\"src-components-molecules-SubMenuList-___style__description___25jBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-bar-block\":\"src-components-organisms-MenuBarBlock-___style__menu-bar-block___1FZtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"src-components-atoms-Button-___style__button___7GmPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"src-components-atoms-Fieldset-___style__fieldset___2BEfr\",\"legend\":\"src-components-atoms-Fieldset-___style__legend___3gWyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-list\":\"src-components-molecules-FieldList-___style__field-list___2MXM4\",\"term\":\"src-components-molecules-FieldList-___style__term___1fwnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-list-block\":\"src-components-molecules-FieldListBlock-___style__field-list-block___2zvPn\",\"footer\":\"src-components-molecules-FieldListBlock-___style__footer___3OPEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field-with-icon-block\":\"src-components-molecules-FieldWithIconBlock-___style__field-with-icon-block___3CeDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labeled-radio-field-list\":\"src-components-molecules-LabeledRadioFieldList-___style__labeled-radio-field-list___1BKnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"process-list\":\"src-components-molecules-ProcessList-___style__process-list___2pSXi\",\"item\":\"src-components-molecules-ProcessList-___style__item___3lEOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project-list-block\":\"src-components-molecules-ProjectListBlock-___style__project-list-block___2p8Th\",\"project-list\":\"src-components-molecules-ProjectListBlock-___style__project-list___208np\",\"term\":\"src-components-molecules-ProjectListBlock-___style__term___2x1lJ\",\"definition\":\"src-components-molecules-ProjectListBlock-___style__definition___2B5gA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-list\":\"src-components-molecules-SectionList-___style__section-list___RaHQ-\",\"item\":\"src-components-molecules-SectionList-___style__item___11rU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"small-field-list-block\":\"src-components-molecules-SmallFieldListBlock-___style__small-field-list-block___1h2Yk\",\"list\":\"src-components-molecules-SmallFieldListBlock-___style__list___3L3tK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox-input-label\":\"src-components-molecules-CheckboxInputLabel-___style__checkbox-input-label___pU-3N\",\"label\":\"src-components-molecules-CheckboxInputLabel-___style__label___2qWoH\",\"styled-checkbox\":\"src-components-molecules-CheckboxInputLabel-___style__styled-checkbox___2ne9Q\",\"checked\":\"src-components-molecules-CheckboxInputLabel-___style__checked___3gyko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"src-components-atoms-Input-___style__input___3PVlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-label\":\"src-components-molecules-RadioLabel-___style__radio-label___3-UIp\",\"styled-radio\":\"src-components-molecules-RadioLabel-___style__styled-radio___11Z5e\",\"checked\":\"src-components-molecules-RadioLabel-___style__checked___3V_yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-label\":\"src-components-molecules-SelectLabel-___style__select-label___1KdgR\",\"styled-select\":\"src-components-molecules-SelectLabel-___style__styled-select___2FG3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"src-components-atoms-Select-___style__select___g5Enn\",\"styled-select\":\"src-components-atoms-Select-___style__styled-select___yLWmq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"src-components-atoms-Textarea-___style__textarea___1-A6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-input-block\":\"src-components-molecules-ToggleInputBlock-___style__toggle-input-block___34qVO\"};","import './style.scss';\nimport React from 'react';\n\nconst ContentBlock: React.FC = ({ children }) => (\n  <div styleName=\"content-block\">{children}</div>\n);\n\nexport default ContentBlock;\n","import './style.scss';\nimport React from 'react';\nimport ReactResizeDetector from 'react-resize-detector';\n\nexport interface WrapperBlockProps {\n  clientHeight: number;\n  clientWidth: number;\n}\n\nconst WrapperBlock: React.FC<WrapperBlockProps> = ({\n  children,\n  clientHeight,\n  clientWidth\n}) => {\n  const [contentWidth, setFormWidth] = React.useState(clientWidth / 2);\n  const [pdfWidth, setPdfWidth] = React.useState(clientWidth / 2);\n\n  const { form, menu, pdf } = React.useMemo(\n    () =>\n      (children as React.ReactNode[]).reduce<{\n        form?: React.ReactNode;\n        menu?: React.ReactNode;\n        pdf?: React.ReactNode;\n      }>((previousValue, currentValue) => {\n        const { key } = currentValue as {\n          key: 'form' | 'menu' | 'pdf';\n          [key: string]: any;\n        };\n\n        return { ...previousValue, [key]: currentValue };\n      }, {}),\n    [children]\n  );\n\n  const handleResize = React.useCallback<\n    (width: number, height: number) => void\n  >(\n    width => {\n      setPdfWidth(clientWidth - width);\n    },\n    [clientWidth, setPdfWidth]\n  );\n\n  React.useEffect(() => {\n    setFormWidth(clientWidth / 2);\n    setPdfWidth(clientWidth / 2);\n  }, [clientWidth, setFormWidth, setPdfWidth]);\n\n  return (\n    <div style={{ height: clientHeight }} styleName=\"wrapper-block\">\n      <header styleName=\"menu\">{menu}</header>\n      <div style={{ width: contentWidth }} styleName=\"form\">\n        <ReactResizeDetector handleWidth={true} onResize={handleResize} />\n        {form}\n      </div>\n      <div style={{ width: pdfWidth }} styleName=\"pdf\">\n        {pdf}\n      </div>\n    </div>\n  );\n};\n\nexport default WrapperBlock;\n","import { debounce } from 'debounce';\nimport React from 'react';\n\nconst clientSize = {\n  clientHeight: 0,\n  clientWidth: 0\n};\n\nexport interface WithClientSize {\n  clientSize: typeof clientSize;\n}\n\nconst { Consumer, Provider } = React.createContext<\n  WithClientSize['clientSize']\n>(clientSize);\n\nfunction withClientSize<TOutter>(\n  WrappedComponent: React.FC<TOutter & WithClientSize>\n): React.FC<TOutter & WithClientSize> {\n  const ClientSize: React.FC<TOutter & WithClientSize> = props => {\n    const { clientHeight, clientWidth } = React.useMemo(() => {\n      if (typeof window === 'undefined') {\n        return {\n          clientHeight: 0,\n          clientWidth: 0\n        };\n      }\n\n      const {\n        document: {\n          documentElement: { clientHeight, clientWidth }\n        }\n      } = window;\n\n      return { clientHeight, clientWidth };\n    }, []);\n\n    const [clientSize, setCurrentClientSize] = React.useState({\n      clientHeight,\n      clientWidth\n    });\n\n    React.useEffect(() => {\n      const handleResize = () => {\n        const {\n          documentElement: { clientHeight, clientWidth }\n        } = document;\n\n        setCurrentClientSize({ clientHeight, clientWidth });\n      };\n\n      handleResize();\n\n      window.addEventListener('resize', debounce(handleResize, 250));\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }, [setCurrentClientSize]);\n\n    return (\n      <Provider value={clientSize}>\n        <Consumer>\n          {value => <WrappedComponent {...props} clientSize={value} />}\n        </Consumer>\n      </Provider>\n    );\n  };\n\n  return ClientSize;\n}\n\nexport default withClientSize;\n","import './style.scss';\nimport React from 'react';\n\ninterface Menu {\n  description: React.ReactNode;\n  key?: string;\n  term: string;\n}\n\nexport interface MenuListProps {\n  menus: Menu[];\n}\n\nconst MenuList: React.FC<MenuListProps> = ({ menus }) => {\n  const items = menus.map(({ description, term, key = term }) => (\n    <li key={key} styleName=\"item\">\n      <div styleName=\"term\">{term}</div>\n      <div styleName=\"description\">{description}</div>\n    </li>\n  ));\n\n  return <ul styleName=\"menu-list\">{items}</ul>;\n};\n\nexport default MenuList;\n","import './style.scss';\nimport React from 'react';\n\ninterface SubMenu {\n  handleClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  key?: string;\n  term: string;\n}\n\nexport interface SubMenuListProps {\n  subMenus: SubMenu[];\n}\n\nconst SubMenuList: React.FC<SubMenuListProps> = ({ subMenus }) => {\n  const items = subMenus.map(({ handleClick, term, key = term }) => (\n    <li key={key} styleName=\"item\">\n      <div styleName=\"term\" onClick={handleClick}>\n        {term}\n      </div>\n    </li>\n  ));\n\n  return <ul styleName=\"sub-menu-list\">{items}</ul>;\n};\n\nexport default SubMenuList;\n","import './style.scss';\nimport React from 'react';\n\nconst MenuBarBlock: React.FC = ({ children }) => (\n  <div styleName=\"menu-bar-block\">{children}</div>\n);\n\nexport default MenuBarBlock;\n","import MenuList from 'components/molecules/MenuList';\nimport SubMenuList from 'components/molecules/SubMenuList';\nimport MenuBarBlock from 'components/organisms/MenuBarBlock';\n// import { saveAs } from 'file-saver';\nimport { TCreatedPdf } from 'pdfmake/build/pdfmake';\nimport React from 'react';\nimport swal2 from 'sweetalert';\nimport swal from '@sweetalert/with-react';\n\nexport interface MenuProps {\n  json: string;\n  pdf?: TCreatedPdf;\n}\n\nconst Menu: React.FC<MenuProps> = ({ json, pdf }) => {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const [currentPdf, setCurrentPdf] = React.useState<typeof pdf>(pdf);\n\n  React.useEffect(() => {\n    if (!pdf) {\n      return;\n    }\n\n    setCurrentPdf(pdf);\n  }, [pdf]);\n\n  return (\n    <MenuBarBlock>\n      <input ref={ref} style={{ display: 'none' }} type=\"file\" />\n      <MenuList\n        menus={[\n          {\n            description: (\n              <SubMenuList\n                subMenus={[\n                  // {\n                  //   handleClick: () => {\n                  //     const blob = new Blob([json], {\n                  //       type: 'application/json'\n                  //     });\n\n                  //     saveAs(blob, 'resumake.json');\n                  //   },\n                  //   term: '名前を付けてレジュメイクデータを保存'\n                  // },\n                  // {\n                  //   handleClick: () => {\n                  //     const { current } = ref;\n\n                  //     if (!current) {\n                  //       return;\n                  //     }\n\n                  //     current.click();\n                  //   },\n                  //   term: 'レジュメイクデータを開く'\n                  // },\n                  {\n                    handleClick: () => {\n                      if (!currentPdf) {\n                        return;\n                      }\n\n                      currentPdf.download('resume.pdf');\n                    },\n                    term: '名前を付けて保存'\n                  }\n                ]}\n              />\n            ),\n            term: 'ファイル'\n          },\n          {\n            description: (\n              <SubMenuList\n                subMenus={[\n                  {\n                    handleClick: () => {\n                      window.open(\n                        'https://github.com/piro0919/resumake/issues/new?assignees=&labels=&template=bug_report.md&title='\n                      );\n                    },\n                    term: 'バグを報告'\n                  },\n                  {\n                    handleClick: () => {\n                      window.open(\n                        'https://github.com/piro0919/resumake/issues/new?assignees=&labels=&template=feature_request.md&title='\n                      );\n                    },\n                    term: '新機能を要求'\n                  },\n                  {\n                    handleClick: () => {\n                      window.open('https://github.com/piro0919/resumake');\n                    },\n                    term: 'レジュメイクについて'\n                  },\n                  {\n                    handleClick: () => {\n                      window.open('https://kk-web.link/');\n                    },\n                    term: '開発者について'\n                  },\n                  {\n                    handleClick: () => {\n                      (swal as typeof swal2)({\n                        content: <div>test</div> as any,\n                        title: '寄付について'\n                      });\n                    },\n                    term: '寄付について'\n                  }\n                ]}\n              />\n            ),\n            term: 'ヘルプ'\n          }\n        ]}\n      />\n    </MenuBarBlock>\n  );\n};\n\nexport default Menu;\n","import './style.scss';\nimport React from 'react';\n\nexport type ButtonProps = React.ButtonHTMLAttributes<any>;\n\nconst Button: React.FC<ButtonProps> = ({ type = 'button', ...props }) => (\n  <button {...props} styleName=\"button\" type={type} />\n);\n\nexport default Button;\n","import './style.scss';\nimport React from 'react';\n\nexport interface FieldsetProps {\n  legend: string;\n}\n\nconst Fieldset: React.FC<FieldsetProps> = ({ children, legend }) => (\n  <fieldset styleName=\"fieldset\">\n    <legend styleName=\"legend\">{legend}</legend>\n    {children}\n  </fieldset>\n);\n\nexport default Fieldset;\n","import React from 'react';\nimport { IconBaseProps, IconType } from 'react-icons';\n\nexport interface IconProps extends IconBaseProps {\n  iconType: IconType;\n}\n\nconst Icon: React.FC<IconProps> = ({\n  color = '#d22f7d',\n  iconType: IconType,\n  size = '100%'\n}) => <IconType color={color} size={size} />;\n\nexport default Icon;\n","import './style.scss';\nimport React from 'react';\n\ninterface Field {\n  description: React.ReactNode;\n  key: string;\n  term: string;\n}\n\nexport interface FieldListProps {\n  fields: Field[];\n}\n\nconst FieldList: React.FC<FieldListProps> = ({ fields }) => {\n  const items = fields.map(({ description, key, term }) => (\n    <React.Fragment key={key}>\n      <dt styleName=\"term\">{term}</dt>\n      <dd>{description}</dd>\n    </React.Fragment>\n  ));\n\n  return <dl styleName=\"field-list\">{items}</dl>;\n};\n\nexport default FieldList;\n","import './style.scss';\nimport React from 'react';\n\nconst FieldListBlock: React.FC = ({ children }) => {\n  const { fieldList, footer } = React.useMemo(\n    () =>\n      (children as React.ReactNode[]).reduce<{\n        fieldList?: React.ReactNode;\n        footer?: React.ReactNode;\n      }>((previousValue, currentValue) => {\n        const { key } = currentValue as {\n          key: 'fieldList' | 'footer';\n          [key: string]: any;\n        };\n\n        return { ...previousValue, [key]: currentValue };\n      }, {}),\n    [children]\n  );\n\n  return (\n    <div styleName=\"field-list-block\">\n      {fieldList}\n      <div styleName=\"footer\">{footer}</div>\n    </div>\n  );\n};\n\nexport default FieldListBlock;\n","import './style.scss';\nimport React from 'react';\n\nconst FieldWithIconBlock: React.FC = ({ children }) => {\n  const { field, icon } = React.useMemo(\n    () =>\n      (children as React.ReactNode[]).reduce<{\n        field?: React.ReactNode;\n        icon?: React.ReactNode;\n      }>((previousValue, currentValue) => {\n        const { key } = currentValue as {\n          key: 'field' | 'icon';\n          [key: string]: any;\n        };\n\n        return { ...previousValue, [key]: currentValue };\n      }, {}),\n    [children]\n  );\n\n  return (\n    <div styleName=\"field-with-icon-block\">\n      {field}\n      {icon}\n    </div>\n  );\n};\n\nexport default FieldWithIconBlock;\n","import './style.scss';\nimport React from 'react';\n\ninterface Field {\n  key: string;\n  value: React.ReactNode;\n}\n\nexport interface LabeledRadioFieldListProps {\n  fields: Field[];\n}\n\nconst LabeledRadioFieldList: React.FC<LabeledRadioFieldListProps> = ({\n  fields\n}) => {\n  const items = React.useMemo(\n    () => fields.map(({ key, value }) => <li key={key}>{value}</li>),\n    [fields]\n  );\n\n  return <ul styleName=\"labeled-radio-field-list\">{items}</ul>;\n};\n\nexport default LabeledRadioFieldList;\n","import './style.scss';\nimport React from 'react';\n\ninterface Process {\n  description: React.ReactNode;\n  key?: string;\n  term: string;\n}\n\nexport interface ProcessListProps {\n  processes: Process[];\n}\n\nconst ProcessList: React.FC<ProcessListProps> = ({ processes }) => {\n  const items = processes.map(({ description, term, key = term }) => (\n    <li key={key} styleName=\"item\">\n      {description}\n    </li>\n  ));\n\n  return <ul styleName=\"process-list\">{items}</ul>;\n};\n\nexport default ProcessList;\n","import './style.scss';\nimport React from 'react';\n\ninterface Project {\n  key: string;\n  node: React.ReactNode;\n}\n\nexport interface ProjectListBlockProps {\n  footer: React.ReactNode;\n  projects: Project[];\n}\n\nconst ProjectListBlock: React.FC<ProjectListBlockProps> = ({\n  footer,\n  projects\n}) => {\n  const items = projects.map(({ key, node }, index) => (\n    <React.Fragment key={key}>\n      <dt styleName=\"term\">{`経歴${index + 1}`}</dt>\n      <dd styleName=\"definition\">{node}</dd>\n    </React.Fragment>\n  ));\n\n  return (\n    <div styleName=\"project-list-block\">\n      <dl styleName=\"project-list\">{items}</dl>\n      <div>{footer}</div>\n    </div>\n  );\n};\n\nexport default ProjectListBlock;\n","import './style.scss';\nimport React from 'react';\n\nconst SectionList: React.FC = ({ children }) => {\n  const items = React.useMemo(\n    () =>\n      (children as React.ReactNode[]).map(child => {\n        const { key } = child as {\n          key: string;\n          [key: string]: any;\n        };\n\n        return (\n          <li key={key} styleName=\"item\">\n            {child}\n          </li>\n        );\n      }),\n    [children]\n  );\n\n  return <ul styleName=\"section-list\">{items}</ul>;\n};\n\nexport default SectionList;\n","import './style.scss';\nimport React from 'react';\n\ninterface Field {\n  key: string;\n  value: React.ReactNode;\n}\n\nexport interface SmallFieldListBlockProps {\n  fields: Field[];\n  footer: React.ReactNode;\n}\n\nconst SmallFieldListBlock: React.FC<SmallFieldListBlockProps> = ({\n  fields,\n  footer\n}) => {\n  const items = React.useMemo(\n    () => fields.map(({ key, value }) => <li key={key}>{value}</li>),\n    [fields]\n  );\n\n  return (\n    <div styleName=\"small-field-list-block\">\n      <ul styleName=\"list\">{items}</ul>\n      <div>{footer}</div>\n    </div>\n  );\n};\n\nexport default SmallFieldListBlock;\n","import React from 'react';\n\nexport type CheckboxInputProps = Omit<React.InputHTMLAttributes<any>, 'type'>;\n\nconst CheckboxInput: React.FC<CheckboxInputProps> = props => (\n  <input {...props} type=\"checkbox\" />\n);\n\nexport default CheckboxInput;\n","import './style.scss';\nimport CheckboxInput, { CheckboxInputProps } from 'components/atoms/CheckboxInput';\nimport React from 'react';\n\nexport interface CheckboxInputLabelProps extends CheckboxInputProps {\n  label: string;\n}\n\nconst CheckboxInputLabel: React.FC<CheckboxInputLabelProps> = ({\n  label,\n  ...props\n}) => {\n  const { checked } = props;\n\n  return (\n    <label styleName=\"checkbox-input-label\">\n      <div styleName=\"label\">{label}</div>\n      <div styleName={`styled-checkbox ${checked ? 'checked' : ''}`} />\n      <CheckboxInput {...props} />\n    </label>\n  );\n};\n\nexport default CheckboxInputLabel;\n","import CheckboxInputLabelComponent, {\n  CheckboxInputLabelProps as CheckboxInputLabelComponentProps\n} from 'components/molecules/CheckboxInputLabel';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type CheckboxInputLabelProps = FieldProps &\n  Pick<CheckboxInputLabelComponentProps, 'label'>;\n\nconst CheckboxInputLabel: React.FC<CheckboxInputLabelProps> = ({\n  field,\n  form,\n  ...props\n}) => {\n  const { value } = field;\n\n  return (\n    <CheckboxInputLabelComponent {...field} {...props} checked={!!value} />\n  );\n};\n\nexport default CheckboxInputLabel;\n","import './style.scss';\nimport React from 'react';\n\nexport interface InputProps\n  extends Exclude<React.InputHTMLAttributes<any>, 'type'> {\n  type?: 'number' | 'text';\n}\n\nconst Input: React.FC<InputProps> = ({ type = 'text', ...props }) => (\n  <input {...props} styleName=\"input\" type={type} />\n);\n\nexport default Input;\n","import InputComponent from 'components/atoms/Input';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type InputProps = FieldProps;\n\nconst Input: React.FC<InputProps> = ({ field, form, ...props }) => (\n  <InputComponent {...field} {...props} />\n);\n\nexport default Input;\n","import React from 'react';\n\nexport type RadioInputProps = Exclude<React.InputHTMLAttributes<any>, 'type'>;\n\nconst RadioInput: React.FC<RadioInputProps> = props => (\n  <input {...props} type=\"radio\" />\n);\n\nexport default RadioInput;\n","import './style.scss';\nimport RadioInput, { RadioInputProps } from 'components/atoms/RadioInput';\nimport React from 'react';\n\nexport interface RadioLabelProps extends RadioInputProps {\n  label: string;\n}\n\nconst RadioLabel: React.FC<RadioLabelProps> = ({ label, ...props }) => {\n  const { checked } = props;\n\n  return (\n    <label styleName=\"radio-label\">\n      <div styleName={`styled-radio ${checked ? 'checked' : ''}`} />\n      {label}\n      <RadioInput {...props} />\n    </label>\n  );\n};\n\nexport default RadioLabel;\n","import RadioLabelComponent, {\n  RadioLabelProps as RadioLabelComponentProps\n} from 'components/molecules/RadioLabel';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type RadioLabelProps = FieldProps &\n  Pick<RadioLabelComponentProps, 'id' | 'label'>;\n\nconst RadioLabel: React.FC<RadioLabelProps> = ({ field, form, ...props }) => {\n  const { value } = field;\n  const { id } = props;\n\n  return (\n    <RadioLabelComponent\n      {...field}\n      {...props}\n      checked={id === value}\n      value={id}\n    />\n  );\n};\n\nexport default RadioLabel;\n","import './style.scss';\nimport React from 'react';\n\nexport type SelectProps = React.SelectHTMLAttributes<any>;\n\nconst Select: React.FC<SelectProps> = props => (\n  <div styleName=\"select\">\n    <select {...props} styleName=\"styled-select\" />\n  </div>\n);\n\nexport default Select;\n","import './style.scss';\nimport Select, { SelectProps } from 'components/atoms/Select';\nimport React from 'react';\n\nexport interface SelectLabelProps extends SelectProps {\n  label: string;\n}\n\nconst SelectLabel: React.FC<SelectLabelProps> = ({ label, ...props }) => (\n  <label styleName=\"select-label\">\n    <div styleName=\"styled-select\">\n      <Select {...props} />\n    </div>\n    {label}\n  </label>\n);\n\nexport default SelectLabel;\n","import SelectLabelComponent, {\n  SelectLabelProps as SelectLabelComponentProps\n} from 'components/molecules/SelectLabel';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type SelectLabelProps = FieldProps &\n  Pick<SelectLabelComponentProps, 'label'>;\n\nconst SelectLabel: React.FC<SelectLabelProps> = ({ field, form, ...props }) => (\n  <SelectLabelComponent {...field} {...props} />\n);\n\nexport default SelectLabel;\n","import React from 'react';\nimport './style.scss';\n\nexport type TextareaProps = React.TextareaHTMLAttributes<any>;\n\nconst Textarea: React.FC<TextareaProps> = props => (\n  <textarea {...props} styleName=\"textarea\" />\n);\n\nexport default Textarea;\n","import TextareaComponent from 'components/atoms/Textarea';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type TextareaProps = FieldProps;\n\nconst Textarea: React.FC<TextareaProps> = ({ field, form, ...props }) => (\n  <TextareaComponent {...field} {...props} />\n);\n\nexport default Textarea;\n","import './style.scss';\nimport Input, { InputProps } from 'components/atoms/Input';\nimport CheckboxInputLabel, {\n  CheckboxInputLabelProps\n} from 'components/molecules/CheckboxInputLabel';\nimport React from 'react';\n\nexport interface ToggleInputBlockProps\n  extends CheckboxInputLabelProps,\n    InputProps {\n  handleChange: CheckboxInputLabelProps['onChange'];\n}\n\nconst ToggleInputBlock: React.FC<ToggleInputBlockProps> = ({\n  checked,\n  handleChange,\n  label,\n  ...props\n}) => (\n  <div styleName=\"toggle-input-block\">\n    <div>\n      <Input {...props} />\n    </div>\n    <div>\n      <CheckboxInputLabel\n        checked={checked}\n        label={label}\n        onChange={handleChange}\n      />\n    </div>\n  </div>\n);\n\nexport default ToggleInputBlock;\n","import ToggleInputBlockComponent, {\n  ToggleInputBlockProps as ToggleInputBlockComponentProps\n} from 'components/molecules/ToggleInputBlock';\nimport { FieldProps } from 'formik';\nimport React from 'react';\n\nexport type ToggleInputBlockProps = FieldProps &\n  Pick<ToggleInputBlockComponentProps, 'checked' | 'label'>;\n\nconst ToggleInputBlock: React.FC<ToggleInputBlockProps> = ({\n  field,\n  form: { setFieldValue },\n  ...props\n}) => {\n  const { name, value } = field;\n  // TODO: エラー出てる\n  const handleChange = React.useCallback(() => {\n    setFieldValue(name, value === undefined ? '' : undefined);\n  }, [name, setFieldValue, value]);\n\n  return (\n    <ToggleInputBlockComponent\n      {...field}\n      {...props}\n      checked={value === undefined}\n      disabled={value === undefined}\n      handleChange={handleChange}\n    />\n  );\n};\n\nexport default ToggleInputBlock;\n","import Button from 'components/atoms/Button';\nimport Fieldset from 'components/atoms/Fieldset';\nimport Icon from 'components/atoms/Icon';\nimport FieldList from 'components/molecules/FieldList';\nimport FieldListBlock from 'components/molecules/FieldListBlock';\nimport FieldWithIconBlock from 'components/molecules/FieldWithIconBlock';\nimport LabeledRadioFieldList from 'components/molecules/LabeledRadioFieldList';\nimport ProcessList from 'components/molecules/ProcessList';\nimport ProjectListBlock from 'components/molecules/ProjectListBlock';\nimport SectionList from 'components/molecules/SectionList';\nimport SmallFieldListBlock from 'components/molecules/SmallFieldListBlock';\nimport { Field, FieldArray, Form, FormikProps, withFormik } from 'formik';\nimport moment, { Moment } from 'moment';\nimport React from 'react';\nimport { FiMinusSquare, FiPlusSquare } from 'react-icons/fi';\nimport CheckboxInputLabel from './CheckboxInputLabel';\nimport Input from './Input';\nimport RadioLabel from './RadioLabel';\nimport SelectLabel from './SelectLabel';\nimport Textarea from './Textarea';\nimport ToggleInputBlock from './ToggleInputBlock';\n\ninterface Project {\n  content: string;\n  dbList: string[];\n  from: {\n    month: number;\n    year: number;\n  };\n  fwMwToolList: string[];\n  languageList: string[];\n  pageBreakAfter?: boolean;\n  process: {\n    requirementDefinition: boolean;\n    basicDesign: boolean;\n    detailedDesign: boolean;\n    mountingSingleUnit: boolean;\n    combinedTest: boolean;\n    comprehensiveTest: boolean;\n    maintenanceAndOperation: boolean;\n  };\n  role: string;\n  serverOsList: string[];\n  team: number;\n  title: string;\n  to: {\n    month: number;\n    year: number;\n  };\n}\n\ninterface Values {\n  belongs?: string;\n  birthday: {\n    date: number;\n    month: number;\n    year: number;\n  };\n  education: string;\n  engineerCode?: string;\n  expertise: string;\n  nearestStation: string;\n  operation: {\n    date: number;\n    month: number;\n    year: number;\n  };\n  projects: Project[];\n  qualification: string;\n  selfIntroduction: string;\n  sex: 'man' | 'woman';\n  specialty: string;\n  specialtyBusiness: string;\n}\n\ninterface SubmitValuesProject extends Omit<Project, 'from' | 'to'> {\n  from: Moment;\n  to: Moment;\n}\n\ninterface SubmitValues\n  extends Omit<Values, 'birthday' | 'operation' | 'projects'> {\n  birthday: Moment;\n  operation: Moment;\n  projects: SubmitValuesProject[];\n}\n\ninterface OuterProps {\n  handleSubmit2: (values: SubmitValues) => void;\n  initialValue: SubmitValues;\n}\n\nexport type ResumeFormProps = FormikProps<Values> & OuterProps;\n\nconst ResumeForm: React.FC<ResumeFormProps> = ({\n  handleSubmit,\n  initialValue,\n  values: {\n    birthday: { month, year },\n    projects\n  }\n}) => {\n  React.useEffect(() => {\n    handleSubmit();\n\n    const timer = setInterval(() => {\n      handleSubmit();\n    }, 5000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [handleSubmit]);\n\n  return (\n    <Form>\n      <SectionList>\n        {[\n          <Fieldset key=\"個人情報\" legend=\"個人情報\">\n            <FieldList\n              fields={[\n                {\n                  description: (\n                    <Field\n                      component={ToggleInputBlock}\n                      label=\"非表示\"\n                      name=\"engineerCode\"\n                      placeholder=\"ENG0123456789\"\n                    />\n                  ),\n                  key: 'engineerCode',\n                  term: '技術者コード'\n                },\n                {\n                  description: (\n                    <Field\n                      component={ToggleInputBlock}\n                      label=\"非表示\"\n                      name=\"belongs\"\n                      placeholder=\"個人事業主\"\n                    />\n                  ),\n                  key: 'belongs',\n                  term: '所属'\n                },\n                {\n                  description: (\n                    <LabeledRadioFieldList\n                      fields={[\n                        {\n                          key: 'birthday.year',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"年\"\n                              name=\"birthday.year\"\n                            >\n                              {Array.from(Array(100).keys())\n                                .reverse()\n                                .map(value => (\n                                  <option\n                                    key={value}\n                                    value={moment().year() - value}\n                                  >\n                                    {moment().year() - value}\n                                  </option>\n                                ))}\n                            </Field>\n                          )\n                        },\n                        {\n                          key: 'birthday.month',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"月\"\n                              name=\"birthday.month\"\n                            >\n                              {moment.months().map((month, index) => (\n                                <option key={month} value={index}>\n                                  {index + 1}\n                                </option>\n                              ))}\n                            </Field>\n                          )\n                        },\n                        {\n                          key: 'birthday.date',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"日\"\n                              name=\"birthday.date\"\n                            >\n                              {Array.from(\n                                Array(\n                                  moment()\n                                    .year(year)\n                                    .month(month)\n                                    .endOf('month')\n                                    .date()\n                                ).keys()\n                              ).map(value => (\n                                <option key={value} value={value + 1}>\n                                  {value + 1}\n                                </option>\n                              ))}\n                            </Field>\n                          )\n                        }\n                      ]}\n                    />\n                  ),\n                  key: 'birthday',\n                  term: '生年月日'\n                },\n                {\n                  description: (\n                    <LabeledRadioFieldList\n                      fields={[\n                        {\n                          key: 'man',\n                          value: (\n                            <Field\n                              component={RadioLabel}\n                              id=\"man\"\n                              label=\"男性\"\n                              name=\"sex\"\n                            />\n                          )\n                        },\n                        {\n                          key: 'woman',\n                          value: (\n                            <Field\n                              component={RadioLabel}\n                              id=\"woman\"\n                              label=\"女性\"\n                              name=\"sex\"\n                            />\n                          )\n                        }\n                      ]}\n                    />\n                  ),\n                  key: 'sex',\n                  term: '性別'\n                },\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"qualification\"\n                      placeholder=\"基本情報技術者\"\n                    />\n                  ),\n                  key: 'qualification',\n                  term: '資格'\n                },\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"education\"\n                      placeholder=\"東京大学 理学部 情報科学科 卒業\"\n                    />\n                  ),\n                  key: 'education',\n                  term: '学歴'\n                },\n                {\n                  description: (\n                    <LabeledRadioFieldList\n                      fields={[\n                        {\n                          key: 'operation.year',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"年\"\n                              name=\"operation.year\"\n                            >\n                              {Array.from(Array(100).keys())\n                                .reverse()\n                                .map(value => (\n                                  <option\n                                    key={value}\n                                    value={moment().year() - value}\n                                  >\n                                    {moment().year() - value}\n                                  </option>\n                                ))}\n                            </Field>\n                          )\n                        },\n                        {\n                          key: 'operation.month',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"月\"\n                              name=\"operation.month\"\n                            >\n                              {moment.months().map((month, index) => (\n                                <option key={month} value={index}>\n                                  {index + 1}\n                                </option>\n                              ))}\n                            </Field>\n                          )\n                        },\n                        {\n                          key: 'operation.date',\n                          value: (\n                            <Field\n                              component={SelectLabel}\n                              label=\"日\"\n                              name=\"operation.date\"\n                            >\n                              {Array.from(\n                                Array(\n                                  moment()\n                                    .year(year)\n                                    .month(month)\n                                    .endOf('month')\n                                    .date()\n                                ).keys()\n                              ).map(value => (\n                                <option key={value} value={value + 1}>\n                                  {value + 1}\n                                </option>\n                              ))}\n                            </Field>\n                          )\n                        },\n                        {\n                          key: 'from',\n                          value: '〜'\n                        }\n                      ]}\n                    />\n                  ),\n                  key: 'operation',\n                  term: '稼働'\n                },\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"nearestStation\"\n                      placeholder=\"山手線 新宿駅\"\n                    />\n                  ),\n                  key: 'nearestStation',\n                  term: '最寄り駅'\n                }\n              ]}\n            />\n          </Fieldset>,\n          <Fieldset key=\"得意なこと\" legend=\"得意なこと\">\n            <FieldList\n              fields={[\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"specialty\"\n                      placeholder=\"実装\"\n                    />\n                  ),\n                  key: 'specialty',\n                  term: '得意分野'\n                },\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"expertise\"\n                      placeholder=\"HTML, CSS, JavaScript\"\n                    />\n                  ),\n                  key: 'expertise',\n                  term: '得意技術'\n                },\n                {\n                  description: (\n                    <Field\n                      component={Input}\n                      name=\"specialtyBusiness\"\n                      placeholder=\"Webサービス開発\"\n                    />\n                  ),\n                  key: 'specialtyBusiness',\n                  term: '得意業務'\n                }\n              ]}\n            />\n          </Fieldset>,\n          <Fieldset key=\"自己PR\" legend=\"自己PR\">\n            <Field component={Textarea} name=\"selfIntroduction\" />\n          </Fieldset>,\n          <Fieldset key=\"経歴\" legend=\"経歴\">\n            <FieldArray\n              name=\"projects\"\n              render={({ push, remove }) => (\n                <ProjectListBlock\n                  projects={projects.map((_, index) => ({\n                    key: `projects.${index}`,\n                    node: (\n                      <FieldListBlock>\n                        <FieldList\n                          fields={[\n                            {\n                              description: (\n                                <LabeledRadioFieldList\n                                  fields={[\n                                    {\n                                      key: 'projects.from.year',\n                                      value: (\n                                        <Field\n                                          component={SelectLabel}\n                                          label=\"年\"\n                                          name={`projects.${index}.from.year`}\n                                        >\n                                          {Array.from(Array(50).keys())\n                                            .reverse()\n                                            .map(value => (\n                                              <option\n                                                key={value}\n                                                value={\n                                                  moment().year() - value + 5\n                                                }\n                                              >\n                                                {moment().year() - value + 5}\n                                              </option>\n                                            ))}\n                                        </Field>\n                                      )\n                                    },\n                                    {\n                                      key: 'projects.from.month',\n                                      value: (\n                                        <Field\n                                          component={SelectLabel}\n                                          label=\"月\"\n                                          name={`projects.${index}.from.month`}\n                                        >\n                                          {moment\n                                            .months()\n                                            .map((month, index) => (\n                                              <option key={month} value={index}>\n                                                {index + 1}\n                                              </option>\n                                            ))}\n                                        </Field>\n                                      )\n                                    }\n                                  ]}\n                                />\n                              ),\n                              key: 'projects.from',\n                              term: '開始'\n                            },\n                            {\n                              description: (\n                                <LabeledRadioFieldList\n                                  fields={[\n                                    {\n                                      key: 'projects.to.year',\n                                      value: (\n                                        <Field\n                                          component={SelectLabel}\n                                          label=\"年\"\n                                          name={`projects.${index}.to.year`}\n                                        >\n                                          {Array.from(Array(50).keys())\n                                            .reverse()\n                                            .map(value => (\n                                              <option\n                                                key={value}\n                                                value={\n                                                  moment().year() - value + 5\n                                                }\n                                              >\n                                                {moment().year() - value + 5}\n                                              </option>\n                                            ))}\n                                        </Field>\n                                      )\n                                    },\n                                    {\n                                      key: 'projects.to.month',\n                                      value: (\n                                        <Field\n                                          component={SelectLabel}\n                                          label=\"月\"\n                                          name={`projects.${index}.to.month`}\n                                        >\n                                          {moment\n                                            .months()\n                                            .map((month, index) => (\n                                              <option key={month} value={index}>\n                                                {index + 1}\n                                              </option>\n                                            ))}\n                                        </Field>\n                                      )\n                                    }\n                                  ]}\n                                />\n                              ),\n                              key: 'projects.to',\n                              term: '終了'\n                            },\n                            {\n                              description: (\n                                <Field\n                                  component={Input}\n                                  name={`projects.${index}.title`}\n                                  placeholder={`プロジェクト${index + 1}`}\n                                />\n                              ),\n                              key: 'projects.title',\n                              term: 'プロジェクト名'\n                            },\n                            {\n                              description: (\n                                <Field\n                                  component={Textarea}\n                                  name={`projects.${index}.content`}\n                                />\n                              ),\n                              key: 'projects.content',\n                              term: '業務内容'\n                            },\n                            {\n                              description: (\n                                <Field\n                                  component={Input}\n                                  name={`projects.${index}.role`}\n                                  placeholder=\"PG\"\n                                />\n                              ),\n                              key: 'projects.role',\n                              term: '役割'\n                            },\n                            {\n                              description: (\n                                <React.Fragment>\n                                  <Field\n                                    component={Input}\n                                    min={1}\n                                    name={`projects.${index}.team`}\n                                    placeholder=\"0\"\n                                    style={{ width: 100 }}\n                                    type=\"number\"\n                                  />\n                                  名\n                                </React.Fragment>\n                              ),\n                              key: 'projects.team',\n                              term: '規模'\n                            },\n                            {\n                              description: (\n                                <FieldArray\n                                  name={`projects.${index}.languageList`}\n                                  render={({ push, remove }) => {\n                                    const { languageList } = projects[index];\n\n                                    return (\n                                      <SmallFieldListBlock\n                                        fields={languageList.map(\n                                          (_, index2) => ({\n                                            key: `projects.${index}.languageList.${index2}`,\n                                            value: (\n                                              <FieldWithIconBlock>\n                                                <Field\n                                                  component={Input}\n                                                  key=\"field\"\n                                                  name={`projects.${index}.languageList.${index2}`}\n                                                  placeholder=\"HTML\"\n                                                />\n                                                <button\n                                                  key=\"icon\"\n                                                  onClick={() => {\n                                                    remove(index2);\n                                                  }}\n                                                  style={{ height: 20 }}\n                                                  tabIndex={-1}\n                                                  type=\"button\"\n                                                >\n                                                  <Icon\n                                                    iconType={FiMinusSquare}\n                                                  />\n                                                </button>\n                                              </FieldWithIconBlock>\n                                            )\n                                          })\n                                        )}\n                                        footer={\n                                          <button\n                                            onClick={() => {\n                                              const { projects } = initialValue;\n                                              const {\n                                                languageList\n                                              } = projects[0];\n\n                                              push(languageList[0]);\n                                            }}\n                                            style={{ height: 20 }}\n                                            tabIndex={-1}\n                                            type=\"button\"\n                                          >\n                                            <Icon iconType={FiPlusSquare} />\n                                          </button>\n                                        }\n                                      />\n                                    );\n                                  }}\n                                />\n                              ),\n                              key: 'projects.languageList',\n                              term: '使用言語'\n                            },\n                            {\n                              description: (\n                                <FieldArray\n                                  name={`projects.${index}.dbList`}\n                                  render={({ push, remove }) => {\n                                    const { dbList } = projects[index];\n\n                                    return (\n                                      <SmallFieldListBlock\n                                        fields={dbList.map((_, index2) => ({\n                                          key: `projects.${index}.dbList.${index2}`,\n                                          value: (\n                                            <FieldWithIconBlock>\n                                              <Field\n                                                component={Input}\n                                                key=\"field\"\n                                                name={`projects.${index}.dbList.${index2}`}\n                                                placeholder=\"PostgreSQL\"\n                                              />\n                                              <button\n                                                key=\"icon\"\n                                                onClick={() => {\n                                                  remove(index2);\n                                                }}\n                                                style={{ height: 20 }}\n                                                tabIndex={-1}\n                                                type=\"button\"\n                                              >\n                                                <Icon\n                                                  iconType={FiMinusSquare}\n                                                />\n                                              </button>\n                                            </FieldWithIconBlock>\n                                          )\n                                        }))}\n                                        footer={\n                                          <button\n                                            onClick={() => {\n                                              const { projects } = initialValue;\n                                              const { dbList } = projects[0];\n\n                                              push(dbList[0]);\n                                            }}\n                                            style={{ height: 20 }}\n                                            tabIndex={-1}\n                                            type=\"button\"\n                                          >\n                                            <Icon iconType={FiPlusSquare} />\n                                          </button>\n                                        }\n                                      />\n                                    );\n                                  }}\n                                />\n                              ),\n                              key: 'projects.dbList',\n                              term: 'DB'\n                            },\n                            {\n                              description: (\n                                <FieldArray\n                                  name={`projects.${index}.serverOsList`}\n                                  render={({ push, remove }) => {\n                                    const { serverOsList } = projects[index];\n\n                                    return (\n                                      <SmallFieldListBlock\n                                        fields={serverOsList.map(\n                                          (_, index2) => ({\n                                            key: `projects.${index}.serverOsList.${index2}`,\n                                            value: (\n                                              <FieldWithIconBlock>\n                                                <Field\n                                                  component={Input}\n                                                  key=\"field\"\n                                                  name={`projects.${index}.serverOsList.${index2}`}\n                                                  placeholder=\"CentOS\"\n                                                />\n                                                <button\n                                                  key=\"icon\"\n                                                  onClick={() => {\n                                                    remove(index2);\n                                                  }}\n                                                  style={{ height: 20 }}\n                                                  tabIndex={-1}\n                                                  type=\"button\"\n                                                >\n                                                  <Icon\n                                                    iconType={FiMinusSquare}\n                                                  />\n                                                </button>\n                                              </FieldWithIconBlock>\n                                            )\n                                          })\n                                        )}\n                                        footer={\n                                          <button\n                                            onClick={() => {\n                                              const { projects } = initialValue;\n                                              const {\n                                                serverOsList\n                                              } = projects[0];\n\n                                              push(serverOsList[0]);\n                                            }}\n                                            style={{ height: 20 }}\n                                            tabIndex={-1}\n                                            type=\"button\"\n                                          >\n                                            <Icon iconType={FiPlusSquare} />\n                                          </button>\n                                        }\n                                      />\n                                    );\n                                  }}\n                                />\n                              ),\n                              key: 'projects.serverOsList',\n                              term: 'サーバOS'\n                            },\n                            {\n                              description: (\n                                <FieldArray\n                                  name={`projects.${index}.fwMwToolList`}\n                                  render={({ push, remove }) => {\n                                    const { fwMwToolList } = projects[index];\n\n                                    return (\n                                      <SmallFieldListBlock\n                                        fields={fwMwToolList.map(\n                                          (_, index2) => ({\n                                            key: `projects.${index}.fwMwToolList.${index2}`,\n                                            value: (\n                                              <FieldWithIconBlock>\n                                                <Field\n                                                  component={Input}\n                                                  key=\"field\"\n                                                  name={`projects.${index}.fwMwToolList.${index2}`}\n                                                  placeholder=\"React\"\n                                                />\n                                                <button\n                                                  key=\"icon\"\n                                                  onClick={() => {\n                                                    remove(index2);\n                                                  }}\n                                                  style={{ height: 20 }}\n                                                  tabIndex={-1}\n                                                  type=\"button\"\n                                                >\n                                                  <Icon\n                                                    iconType={FiMinusSquare}\n                                                  />\n                                                </button>\n                                              </FieldWithIconBlock>\n                                            )\n                                          })\n                                        )}\n                                        footer={\n                                          <button\n                                            onClick={() => {\n                                              const { projects } = initialValue;\n                                              const {\n                                                fwMwToolList\n                                              } = projects[0];\n\n                                              push(fwMwToolList[0]);\n                                            }}\n                                            style={{ height: 20 }}\n                                            tabIndex={-1}\n                                            type=\"button\"\n                                          >\n                                            <Icon iconType={FiPlusSquare} />\n                                          </button>\n                                        }\n                                      />\n                                    );\n                                  }}\n                                />\n                              ),\n                              key: 'projects.fwMwToolList',\n                              term: 'FW・MW ツール等'\n                            },\n                            {\n                              description: (\n                                <ProcessList\n                                  processes={[\n                                    {\n                                      key: 'requirementDefinition',\n                                      value: '要件定義'\n                                    },\n                                    {\n                                      key: 'basicDesign',\n                                      value: '基本設計'\n                                    },\n                                    {\n                                      key: 'detailedDesign',\n                                      value: '詳細設計'\n                                    },\n                                    {\n                                      key: 'mountingSingleUnit',\n                                      value: '実装・単体'\n                                    },\n                                    {\n                                      key: 'combinedTest',\n                                      value: '結合テスト'\n                                    },\n                                    {\n                                      key: 'comprehensiveTest',\n                                      value: '総合テスト'\n                                    },\n                                    {\n                                      key: 'maintenanceAndOperation',\n                                      value: '保守・運用'\n                                    }\n                                  ].map(({ key, value }) => ({\n                                    description: (\n                                      <Field\n                                        component={CheckboxInputLabel}\n                                        label={value}\n                                        name={`projects.${index}.process.${key}`}\n                                      />\n                                    ),\n                                    term: value\n                                  }))}\n                                />\n                              ),\n                              key: 'projects.process',\n                              term: '担当工程'\n                            },\n                            {\n                              description: (\n                                <Field\n                                  component={CheckboxInputLabel}\n                                  name={`projects.${index}.pageBreakAfter`}\n                                />\n                              ),\n                              key: 'projects.pageBreakAfter',\n                              term: '改ページ'\n                            }\n                          ]}\n                          key=\"fieldList\"\n                        />\n                        <Button\n                          key=\"footer\"\n                          onClick={() => {\n                            remove(index);\n                          }}\n                          tabIndex={-1}\n                          type=\"button\"\n                        >\n                          削除\n                        </Button>\n                      </FieldListBlock>\n                    )\n                  }))}\n                  footer={\n                    <Button\n                      onClick={() => {\n                        const { projects } = initialValue;\n\n                        push(\n                          projects.map(({ from, to, ...projects }) => ({\n                            ...projects,\n                            from: {\n                              month: from.month(),\n                              year: from.year()\n                            },\n                            to: {\n                              month: to.month(),\n                              year: to.year()\n                            }\n                          }))[0]\n                        );\n                      }}\n                      tabIndex={-1}\n                    >\n                      追加\n                    </Button>\n                  }\n                />\n              )}\n            />\n          </Fieldset>\n        ]}\n      </SectionList>\n    </Form>\n  );\n};\n\nexport default withFormik<OuterProps, Values>({\n  handleSubmit: (\n    {\n      birthday: {\n        date: birthdayDate,\n        month: birthdayMonth,\n        year: birthdayYear\n      },\n      operation: {\n        date: operationDate,\n        month: operationMonth,\n        year: operationYear\n      },\n      projects,\n      ...values\n    },\n    { props: { handleSubmit2 } }\n  ) => {\n    handleSubmit2({\n      ...values,\n      birthday: moment()\n        .year(birthdayYear)\n        .month(birthdayMonth)\n        .date(birthdayDate)\n        .startOf('date'),\n      operation: moment()\n        .year(operationYear)\n        .month(operationMonth)\n        .date(operationDate)\n        .startOf('date'),\n      projects: projects.map(\n        ({\n          from: { month: fromMonth, year: fromYear },\n          to: { month: toMonth, year: toYear },\n          ...project\n        }) => ({\n          ...project,\n          from: moment()\n            .year(fromYear)\n            .month(fromMonth)\n            .startOf('month'),\n          to: moment()\n            .year(toYear)\n            .month(toMonth)\n            .startOf('month')\n        })\n      )\n    });\n  },\n  mapPropsToValues: ({\n    initialValue: { birthday, operation, projects, ...initialValue }\n  }) => ({\n    ...initialValue,\n    birthday: {\n      date: birthday.date(),\n      month: birthday.month(),\n      year: birthday.year()\n    },\n    operation: {\n      date: operation.date(),\n      month: operation.month(),\n      year: operation.year()\n    },\n    projects: projects.map(({ from, to, ...projects }) => ({\n      ...projects,\n      from: {\n        month: from.month(),\n        year: from.year()\n      },\n      to: {\n        month: to.month(),\n        year: to.year()\n      }\n    }))\n  })\n})(ResumeForm);\n","import { TCreatedPdf } from 'pdfmake/build/pdfmake';\nimport React from 'react';\n\nexport interface ResumeIframeProps {\n  pdf?: TCreatedPdf;\n}\n\nconst ResumeIframe: React.FC<ResumeIframeProps> = ({ pdf }) => {\n  const [url, setUrl] = React.useState('');\n\n  React.useEffect(() => {\n    if (!pdf) {\n      return;\n    }\n\n    pdf.getDataUrl(result => {\n      setUrl(result);\n    });\n  }, [pdf, setUrl]);\n\n  return (\n    <iframe\n      src={url}\n      style={{\n        height: '100%',\n        width: '100%'\n      }}\n      title=\"resume\"\n    />\n  );\n};\n\nexport default ResumeIframe;\n","import ContentBlock from 'components/organisms/ContentBlock';\nimport WrapperBlock from 'components/templates/WrapperBlock';\nimport withClientSize, { WithClientSize } from 'hocs/withClientSize';\nimport moment from 'moment';\nimport pdfMake, { PageSize } from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Menu from './Menu';\nimport ResumeForm, { ResumeFormProps } from './ResumeForm';\nimport ResumeIframe from './ResumeIframe';\n\nexport type PagesProps = RouteComponentProps & WithClientSize;\n\nconst Pages: React.FC<PagesProps> = ({\n  clientSize: { clientHeight, clientWidth }\n}) => {\n  const initialValue = React.useMemo<\n    ArgumentTypes<ResumeFormProps['handleSubmit2']>[0]\n  >(\n    () => ({\n      belongs: '',\n      birthday: moment()\n        .add(-30, 'years')\n        .startOf('date'),\n      education: '',\n      engineerCode: '',\n      expertise: '',\n      nearestStation: '',\n      operation: moment()\n        .add(1, 'month')\n        .startOf('month'),\n      projects: [\n        {\n          content: '',\n          dbList: [''],\n          from: moment()\n            .add(-1, 'year')\n            .startOf('month'),\n          fwMwToolList: [''],\n          languageList: [''],\n          process: {\n            requirementDefinition: false,\n            basicDesign: false,\n            detailedDesign: false,\n            mountingSingleUnit: false,\n            combinedTest: false,\n            comprehensiveTest: false,\n            maintenanceAndOperation: false\n          },\n          role: '',\n          serverOsList: [''],\n          team: 1,\n          title: '',\n          to: moment().startOf('month')\n        }\n      ],\n      qualification: '',\n      selfIntroduction: '',\n      sex: 'man',\n      specialty: '',\n      specialtyBusiness: ''\n    }),\n    []\n  );\n\n  const [values, setValues] = React.useState<typeof initialValue>(initialValue);\n\n  const handleSubmit = React.useCallback<ResumeFormProps['handleSubmit2']>(\n    values => {\n      setValues(values);\n    },\n    [setValues]\n  );\n\n  const ref = React.useRef(values);\n\n  React.useEffect(() => {\n    pdfMake.fonts = {\n      ipam: {\n        bold: 'ipam.ttf',\n        bolditalics: 'ipam.ttf',\n        normal: 'ipam.ttf',\n        italics: 'ipam.ttf'\n      }\n    };\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\n  }, []);\n\n  const pdf = React.useMemo(() => {\n    if (JSON.stringify(ref.current) === JSON.stringify(values)) {\n      return;\n    }\n\n    const {\n      belongs,\n      birthday,\n      education,\n      engineerCode,\n      expertise,\n      nearestStation,\n      operation,\n      projects,\n      qualification,\n      selfIntroduction,\n      sex,\n      specialty,\n      specialtyBusiness\n    } = values;\n\n    const projectRows: typeof projects = [];\n\n    projects.forEach(project => {\n      projectRows.push(project);\n      projectRows.push(project);\n    });\n\n    const firstTableBody = [\n      {\n        key: '技術者コード',\n        value: engineerCode\n      },\n      {\n        key: '所属',\n        value: belongs\n      },\n      {\n        key: '年齢',\n        value: `満${moment().diff(birthday, 'years')}歳`\n      },\n      {\n        key: '性別',\n        value: `${sex === 'man' ? '男' : '女'}性`\n      },\n      {\n        key: '資格',\n        value: qualification\n      },\n      {\n        key: '学歴',\n        value: education\n      },\n      {\n        key: '稼働',\n        value: operation.format('YYYY年M月D日〜')\n      },\n      {\n        key: '最寄り駅',\n        value: nearestStation\n      }\n    ].filter(({ value }) => value !== undefined);\n\n    return pdfMake.createPdf({\n      content: [\n        {\n          alignment: 'center',\n          fontSize: 12,\n          margin: [0, 0, 0, 5],\n          style: 'header',\n          text: 'スキルシート'\n        },\n        {\n          layout: {\n            fillColor: (_: number, __: any, columnIndex: number) =>\n              columnIndex % 2 ? null : '#ccf',\n            hLineWidth: (index: number, { table: { body } }: any) =>\n              !index || index === body.length ? 1 : 0.5,\n            vLineWidth: (index: number, { table: { widths } }: any) =>\n              !index || index === widths.length ? 1 : 0.5\n          },\n          margin: [0, 0, 0, 5],\n          table: {\n            body: firstTableBody\n              .filter((_, index) => !(index % 2))\n              .map(({ key, value }, index) => {\n                const columns = [key, value];\n\n                if (firstTableBody.length <= index * 2 + 1) {\n                  return [...columns, '', ''];\n                }\n\n                const { key: nextKey, value: nextValue } = firstTableBody[\n                  index * 2 + 1\n                ];\n\n                return [...columns, nextKey, nextValue];\n              }),\n            widths: [50, '*', 50, '*']\n          }\n        },\n        {\n          layout: {\n            fillColor: (_: number, __: any, columnIndex: number) =>\n              columnIndex % 2 ? null : '#ccf',\n            hLineWidth: (index: number, { table: { body } }: any) =>\n              !index || index === body.length ? 1 : 0.5,\n            vLineWidth: (index: number, { table: { widths } }: any) =>\n              !index || index === widths.length ? 1 : 0.5\n          },\n          margin: [0, 0, 0, 5],\n          table: {\n            body: [\n              ['得意分野', specialty],\n              ['得意技術', expertise],\n              ['得意業務', specialtyBusiness]\n            ],\n            widths: [50, '*']\n          }\n        },\n        {\n          layout: {\n            fillColor: (_: number, __: any, columnIndex: number) =>\n              columnIndex % 2 ? null : '#ccf',\n            hLineWidth: (index: number, { table: { body } }: any) =>\n              !index || index === body.length ? 1 : 0.5,\n            vLineWidth: (index: number, { table: { widths } }: any) =>\n              !index || index === widths.length ? 1 : 0.5\n          },\n          margin: [0, 0, 0, 5],\n          table: {\n            body: [['自己PR', selfIntroduction]],\n            widths: [50, '*']\n          }\n        },\n        {\n          layout: {\n            fillColor: (rowIndex: number, _: any, columnIndex: number) =>\n              rowIndex <= 1 || (columnIndex === 0 && rowIndex !== 12 + 2)\n                ? '#ccf'\n                : null,\n            hLineWidth: (index: number, { table: { body } }: any) =>\n              !index || index === body.length ? 1 : 0.5,\n            vLineWidth: (index: number, { table: { widths } }: any) =>\n              !index || index === widths.length ? 1 : 0.5\n          },\n          table: {\n            body: [\n              [\n                {\n                  colSpan: 4,\n                  rowSpan: 2,\n                  text: '期間'\n                },\n                '',\n                '',\n                '',\n                {\n                  rowSpan: 2,\n                  text: '業務内容'\n                },\n                {\n                  rowSpan: 2,\n                  text: `役割\n                      規模`\n                },\n                {\n                  rowSpan: 2,\n                  text: '使用言語'\n                },\n                {\n                  rowSpan: 2,\n                  text: 'DB'\n                },\n                {\n                  rowSpan: 2,\n                  text: 'サーバOS'\n                },\n                {\n                  rowSpan: 2,\n                  text: `FW・MW\n                      ツール等`\n                },\n                {\n                  colSpan: 7,\n                  text: '担当工程'\n                },\n                '',\n                '',\n                '',\n                '',\n                '',\n                ''\n              ],\n              [\n                '',\n                '',\n                '',\n                '',\n                '',\n                '',\n                '',\n                '',\n                '',\n                '',\n                '要件定義',\n                '基本設計',\n                '詳細設計',\n                '実装・単体',\n                '結合テスト',\n                '総合テスト',\n                '保守・運用'\n              ],\n              ...projectRows.map(\n                (\n                  {\n                    content,\n                    dbList,\n                    from,\n                    fwMwToolList,\n                    languageList,\n                    pageBreakAfter,\n                    process: {\n                      requirementDefinition,\n                      basicDesign,\n                      detailedDesign,\n                      mountingSingleUnit,\n                      combinedTest,\n                      comprehensiveTest,\n                      maintenanceAndOperation\n                    },\n                    role,\n                    serverOsList,\n                    team,\n                    title,\n                    to\n                  },\n                  index\n                ) =>\n                  !(index % 2)\n                    ? [\n                        {\n                          rowSpan: 2,\n                          text: index / 2 + 1\n                        },\n                        from.format(`YYYY年MM月`),\n                        '-',\n                        to.format(`YYYY年MM月`),\n                        title,\n                        role,\n                        {\n                          rowSpan: 2,\n                          text: languageList.join('\\n') || '-'\n                        },\n                        {\n                          rowSpan: 2,\n                          text: dbList.join('\\n') || '-'\n                        },\n                        {\n                          rowSpan: 2,\n                          text: serverOsList.join('\\n') || '-'\n                        },\n                        {\n                          rowSpan: 2,\n                          text: fwMwToolList.join('\\n') || '-'\n                        },\n                        {\n                          rowSpan: 2,\n                          text: requirementDefinition ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: basicDesign ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: detailedDesign ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: mountingSingleUnit ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: combinedTest ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: comprehensiveTest ? '●' : ''\n                        },\n                        {\n                          rowSpan: 2,\n                          text: maintenanceAndOperation ? '●' : ''\n                        }\n                      ]\n                    : [\n                        '',\n                        {\n                          colSpan: 3,\n                          text: `(${to.diff(from, 'months') + 1}ヶ月間)`\n                        },\n                        '',\n                        '',\n                        content,\n                        {\n                          text: `チーム\\n${team}名`\n                        },\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        '',\n                        ''\n                      ].map(cell =>\n                        pageBreakAfter\n                          ? {\n                              ...(typeof cell === 'string'\n                                ? { text: cell }\n                                : cell),\n                              pageBreak: 'after'\n                            }\n                          : cell\n                      )\n              )\n            ],\n            headerRows: 2,\n            widths: [\n              'auto',\n              30,\n              'auto',\n              30,\n              '*',\n              20,\n              'auto',\n              'auto',\n              'auto',\n              'auto',\n              5,\n              5,\n              5,\n              5,\n              5,\n              5,\n              5\n            ]\n          }\n        }\n      ],\n      defaultStyle: {\n        font: 'ipam',\n        fontSize: 6,\n        lineHeight: 1.25\n      },\n      pageMargins: [15, 5, 15, 5],\n      pageSize: 'A4' as PageSize.A4\n    });\n  }, [ref, values]);\n\n  React.useEffect(() => {\n    ref.current = values;\n  }, [ref, values]);\n\n  return (\n    <WrapperBlock clientHeight={clientHeight} clientWidth={clientWidth}>\n      <Menu json={JSON.stringify(values)} key=\"menu\" pdf={pdf} />\n      <ContentBlock key=\"form\">\n        <ResumeForm handleSubmit2={handleSubmit} initialValue={initialValue} />\n      </ContentBlock>\n      <ResumeIframe key=\"pdf\" pdf={pdf} />\n    </WrapperBlock>\n  );\n};\n\nexport default withClientSize(Pages);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Pages from './pages';\n\nconst Containers: React.FC = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route component={Pages} exact={true} path=\"/\" />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Containers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'moment/locale/ja';\nimport 'ress';\nimport './styles/global.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Containers from './containers';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Containers />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}